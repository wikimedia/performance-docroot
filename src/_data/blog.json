{
	"feed": {
		"xmlns": "http://www.w3.org/2005/Atom",
		"title": "The speed of thought",
		"id": "https://phabricator.wikimedia.org/phame/blog/feed/7/",
		"link": {
			"rel": "self",
			"type": "application/atom+xml",
			"href": "https://phabricator.wikimedia.org/phame/blog/feed/7/"
		},
		"updated": "2019-04-10T12:21:50+00:00",
		"subtitle": "As the Wikimedia Foundation’s Performance Team, we want to create value for readers and editors by making it possible to retrieve and render content at the speed of thought, from anywhere in the world, on the broadest range of devices and connection profiles.",
		"entry": [
			{
				"title": "Evaluating Element Timing for Images",
				"link": {
					"href": "/phame/live/7/post/157/evaluating_element_timing_for_images/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/157/",
				"author": {
					"name": "Peter (Peter Hedenskog)"
				},
				"published": "2019-04-10T08:24:30+00:00",
				"updated": "2019-04-10T12:21:50+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": {
									"href": "https://github.com/WICG/element-timing",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Element Timing for Images API"
								}
							},
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Wikimedia_Performance_Team",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "performance team"
								}
							},
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/T115600",
										"class": "phui-tag-view phui-tag-type-object ",
										"data-sigil": "hovercard",
										"data-meta": "0_2",
										"span": {
											"class": "phui-tag-core-closed",
											"span": {
												"class": "phui-tag-core phui-tag-color-object",
												"$t": "T115600"
											}
										}
									},
									{
										"href": "https://github.com/WPO-Foundation/webpagetest",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "WebPageTest"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Barack_Obama",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Obama"
									}
								]
							},
							"The results were very disappointing. The mark was at 2.0 seconds, but as you can see in the screenshot, the image was displayed at 4.8 seconds. It was off by 2.8 seconds :(  We did multiple tests and we got the same result multiple times. We tried the state-of-the-art technique people where talking about and it was clearly completely wrong. This taught us the important lesson the reliability of new RUM metrics we decide to collect need to be verified in synthetic testing using a video recording of the browser.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/h7q4uupe2qbeypcgvwtj/PHID-FILE-dkdnyjeaskt7jvb22vc5/wpt-chrome.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_0",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/h7q4uupe2qbeypcgvwtj/PHID-FILE-dkdnyjeaskt7jvb22vc5/wpt-chrome.png",
											"width": "600"
										}
									}
								}
							},
							"The next attempt to measure when images appear was when WebPageTest added support for visual element metrics (meaning analyzing a video and getting metrics for specific elements), but that only helps us with synthetic testing. We also want better metrics collected directly from our users.",
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/p/Gilles/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_4",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@Gilles"
										}
									},
									{
										"href": "https://github.com/GoogleChrome/OriginTrials/blob/gh-pages/explainer.md",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "origin trials for Chrome"
									},
									{
										"href": "https://developers.chrome.com/origintrials/#/view_trial/3954160472831295489",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Trial for Element Timing for Images"
									},
									{
										"href": "https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Russian Wikipedia"
									}
								]
							},
							"Let's verify the accuracy of this new metric and see if it works better than old approximations marked with user timings.",
							{
								"a": {
									"href": "https://github.com/sitespeedio/browsertime",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Browsertime"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/wyijfr5okp6xbtc76bsv/PHID-FILE-iu5wohvndppjuxa2ywr5/thumbnail-image.jpg",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_1",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/wyijfr5okp6xbtc76bsv/PHID-FILE-iu5wohvndppjuxa2ywr5/thumbnail-image.jpg",
											"width": "600"
										}
									}
								}
							},
							{
								"strong": "thumbnail-high"
							},
							"This is passed to Browsertime, which runs it after the page has loaded. Visual Elements are enabled, which analyses the video and gives us a timing corresponding to when the largest image within the viewport is displayed (which for most articles, is the thumbnail-high image).",
							"This was run on two different connectivity types and 11 times in a row. Then we keep the median for both metrics and we get the following:",
							"The video recording performed by browsertime is done at 30 frames per second. Which means each frame lasts 1000/30 = 33.333ms. This indicates that the differences seen between Element Timing and the video analytics are within one frame. Element Timing might very well be the more accurate one, since it's not constrained by the video recording's 30fps cadence.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T219231",
									"class": "phui-tag-view phui-tag-type-object ",
									"data-sigil": "hovercard",
									"data-meta": "0_3",
									"span": {
										"class": "phui-tag-core-closed",
										"span": {
											"class": "phui-tag-core phui-tag-color-object",
											"$t": "T219231"
										}
									}
								}
							},
							"For our content, it looks like the Element Timing API finally provides a way for us to know accurately when images are really displayed to users!"
						],
						"h3": [
							{
								"class": "remarkup-header",
								"$t": "Background"
							},
							{
								"class": "remarkup-header",
								"$t": "Element timings"
							},
							{
								"class": "remarkup-header",
								"$t": "Evaluating element timings"
							}
						],
						"div": [
							{
								"class": "remarkup-code-block",
								"data-code-lang": "js",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"span": [
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "kd",
											"$t": "function"
										},
										{
											"class": "p",
											"$t": "()"
										},
										{
											"class": "p",
											"$t": "{"
										},
										{
											"class": "kr",
											"$t": "const"
										},
										{
											"class": "nx",
											"$t": "elements"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nx",
											"$t": "performance"
										},
										{
											"class": "p",
											"$t": "."
										},
										{
											"class": "nx",
											"$t": "getEntriesByType"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "s1",
											"$t": "'element'"
										},
										{
											"class": "p",
											"$t": ");"
										},
										{
											"class": "k",
											"$t": "for"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "kd",
											"$t": "let"
										},
										{
											"class": "nx",
											"$t": "element"
										},
										{
											"class": "nx",
											"$t": "of"
										},
										{
											"class": "nx",
											"$t": "elements"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "p",
											"$t": "{"
										},
										{
											"class": "k",
											"$t": "if"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "nx",
											"$t": "element"
										},
										{
											"class": "p",
											"$t": "."
										},
										{
											"class": "nx",
											"$t": "name"
										},
										{
											"class": "o",
											"$t": "==="
										},
										{
											"class": "s1",
											"$t": "'thumbnail-high'"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "p",
											"$t": "{"
										},
										{
											"class": "k",
											"$t": "return"
										},
										{
											"class": "nx",
											"$t": "element"
										},
										{
											"class": "p",
											"$t": "."
										},
										{
											"class": "nx",
											"$t": "startTime"
										},
										{
											"class": "p",
											"$t": ";"
										},
										{
											"class": "p",
											"$t": "}"
										},
										{
											"class": "p",
											"$t": "}"
										},
										{
											"class": "p",
											"$t": "})();"
										}
									]
								}
							},
							{
								"class": "remarkup-code-block",
								"data-code-lang": "console",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"span": {
										"class": "gp",
										"$t": "$ docker run --rm -v \"$(pwd)\":/browsertime sitespeedio/browsertime:4.6.0 --script thumbnail-high.js https://ru.wikipedia.org/wiki/Древесные_стрижи -n 11 --visualElements"
									}
								}
							},
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"td": [
												{
													"strong": "URL"
												},
												{
													"strong": "Connectivity"
												},
												{
													"strong": "Largest Image from video"
												},
												{
													"strong": "Element Timing"
												}
											]
										},
										{
											"td": [
												{
													"a": {
														"href": "https://ru.wikipedia.org/wiki/Древесные_стрижи",
														"class": "remarkup-link",
														"rel": "noreferrer",
														"$t": "https://ru.wikipedia.org/wiki/Древесные_стрижи"
													}
												},
												"cable",
												"1100",
												"1097"
											]
										},
										{
											"td": [
												{
													"a": {
														"href": "https://ru.wikipedia.org/wiki/Древесные_стрижи",
														"class": "remarkup-link",
														"rel": "noreferrer",
														"$t": "https://ru.wikipedia.org/wiki/Древесные_стрижи"
													}
												},
												"3g",
												"1567",
												"1536"
											]
										},
										{}
									]
								}
							}
						]
					}
				}
			},
			{
				"title": "Autonomous Systems performance report",
				"link": {
					"href": "/phame/live/7/post/154/autonomous_systems_performance_report/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/154/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2019-03-27T11:07:06+00:00",
				"updated": "2019-04-02T06:49:04+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://performance.wikimedia.org/asreport/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "our first report"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Autonomous_system_(Internet)",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Autonomous Systems"
									}
								]
							},
							{
								"a": {
									"href": "https://performance.wikimedia.org/asreport/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "This report"
								}
							},
							"In order to make a fair assessment of the autonomous systems' performance, real user metrics collected from web browsers are normalised, in order to avoid differences such as average device power for a given network's users potentially skewing the results. For example, an ISP with more expensive data plans might have users with more expensive, better performing devices on average. This is way we compare data points only for similar effective device CPU power between providers. We also separate the mobile and desktop experiences, because they serve different content, with a notable difference in the median page weight, which directly impacts performance metrics. We wouldn't want the mobile/desktop mix of a given provider to influence the results.",
							"If you look at the report, you might wonder why some autonomous systems' underlying mobile networks show up under \"desktop\" and some wired internet providers appear under \"mobile\". The explanation is that the internet providers either sell home internet devices that are effectively mobile network modems, resulting in people using their desktop computers (and as a result, the desktop websites) over a mobile network. Or the providers have mobile device users automatically connect to the same provider's WiFi routers when users are in reach of one.",
							"One caveat about this report is that in countries that are physically large, like the United States, the country-wide aggregation in no way reflects important regional differences there might be for a given network. The main reason why we can't look at smaller regions is that we have simply no way of knowing where mobile users are connecting from, short of collecting geolocation data. Since we care deeply about our user's privacy and their experience, it doesn't feel appropriate at this time to ask users for their precise location in order to generate this type of finer-grained data. Such a scheme would also suffer from self-selection bias. There's already a lot of work to be done with the data aggregated at the national level!",
							"We hope that this public report will help network operators understand their customers' real performance characteristics when it comes to browsing one of the web's largest websites. We are welcoming of peering requests networks might want to propose, should they seek to improve their connectivity to our datacenters."
						]
					}
				}
			},
			{
				"title": "Debugging production with X-Wikimedia-Debug",
				"link": {
					"href": "/phame/live/7/post/143/debugging_production_with_x-wikimedia-debug/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/143/",
				"author": {
					"name": "kostajh (Kosta Harlan)"
				},
				"published": "2019-02-20T16:15:05+00:00",
				"updated": "2019-03-29T20:31:42+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T187861",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "some topics created by users on Flow discussion boards were not appearing in the Recent Changes feeds"
								}
							},
							"When approaching a bug like this, there are typically three things I do:",
							{
								"a": [
									{
										"href": "https://gerrit.wikimedia.org/r/c/mediawiki/extensions/Flow/+/460928",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "we merged some diagnostic code"
									},
									{
										"href": "https://phabricator.wikimedia.org/p/SBisson/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_7",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@SBisson"
										}
									},
									{
										"href": "https://phabricator.wikimedia.org/T187861#4135959",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "suggested a hypothesis"
									}
								]
							},
							"But we could not reproduce this, nor could we identify exactly where this might occur since the code paths for this functionality had many points where execution could stop silently.",
							{
								"a": [
									{
										"href": "https://wikitech.wikimedia.org/wiki/X-Wikimedia-Debug",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "X-Wikimedia-Debug header"
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/X-Wikimedia-Debug#Browser_extensions",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "browser extensions"
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/SWAT_deploys",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "SWAT'ed into production"
									}
								]
							},
							{
								"a": [
									{
										"href": "https://wikitech.wikimedia.org/wiki/X-Wikimedia-Debug#Request_profiling",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "profile a request"
									},
									{
										"href": "https://performance.wikimedia.org/xhgui/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "XHGui"
									}
								]
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/eg4kieypr7tyyjag36fc/PHID-FILE-m3p7wqwuuf4vemmdxx3u/profile-log.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_5",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/eg4kieypr7tyyjag36fc/PHID-FILE-m3p7wqwuuf4vemmdxx3u/profile-log.png",
											"height": "174"
										}
									}
								}
							},
							"Typically you do this to understand performance bottlenecks in your code, as get a complete list of all functions executed during the request, along with the time and memory usage associated with each function.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/hnrrgafhjfewmrlk4wms/PHID-FILE-c4vgueq2eh5dnhl4edpy/func-list.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_6",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/hnrrgafhjfewmrlk4wms/PHID-FILE-c4vgueq2eh5dnhl4edpy/func-list.png",
											"height": "200"
										}
									}
								}
							},
							"I followed the steps to reproduce and then switched on the \"Profile\" option before posting a new topic on an empty Flow board. Now, I had a profiled request which provided me with information on all the methods called, including which method called another (click on a method call to see its parent and children method calls). From here I could follow the path traversed by Flow's event emitting code, and see exactly where the code execution halted.",
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/MediaWiki-Docker-Dev",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "MediaWiki-Docker-Dev"
								}
							},
							{
								"tt": [
									{
										"class": "remarkup-monospaced",
										"$t": "$permissions"
									},
									{
										"class": "remarkup-monospaced",
										"$t": "deletedtext"
									},
									{
										"class": "remarkup-monospaced",
										"$t": "!$workflow->isDeleted();"
									}
								]
							},
							{
								"a": {
									"href": "https://gerrit.wikimedia.org/r/c/mediawiki/extensions/Flow/+/469623",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "submitted solution"
								},
								"tt": {
									"class": "remarkup-monospaced",
									"$t": "isDeleted()"
								}
							},
							"A few of my conclusions from this experience:",
							{
								"br": [
									{},
									{}
								],
								"a": {
									"href": "https://www.mediawiki.org/wiki/Growth",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Growth Team"
								}
							},
							{
								"em": {
									"a": [
										{
											"href": "https://wikitech.wikimedia.org/wiki/X-Wikimedia-Debug",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "X-Wikimedia-Debug header"
										},
										{
											"href": "https://wikitech.wikimedia.org/wiki/X-Wikimedia-Debug#Browser_extensions",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "browser extension"
										}
									]
								}
							}
						],
						"ol": {
							"class": "remarkup-list",
							"li": [
								{
									"class": "remarkup-list-item",
									"a": [
										{
											"href": "https://phabricator.wikimedia.org/p/Rxy/",
											"class": "phui-tag-view phui-tag-type-person ",
											"data-sigil": "hovercard",
											"data-meta": "0_10",
											"span": {
												"class": "phui-tag-core phui-tag-color-person",
												"$t": "@Rxy"
											}
										},
										{
											"href": "https://phabricator.wikimedia.org/p/Krinkle/",
											"class": "phui-tag-view phui-tag-type-person ",
											"data-sigil": "hovercard",
											"data-meta": "0_9",
											"span": {
												"class": "phui-tag-core phui-tag-color-person",
												"$t": "@Krinkle"
											}
										},
										{
											"href": "https://phabricator.wikimedia.org/p/Etonkovidova/",
											"class": "phui-tag-view phui-tag-type-person ",
											"data-sigil": "hovercard",
											"data-meta": "0_8",
											"span": {
												"class": "phui-tag-core phui-tag-color-person",
												"$t": "@Etonkovidova"
											}
										}
									]
								},
								{
									"class": "remarkup-list-item",
									"$t": "Attempt to reproduce the issue locally and set breakpoints in code to understand why the problem occurs"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Check the production logs to look for any messages related to the bug report"
								}
							]
						},
						"div": [
							{
								"class": "remarkup-code-block",
								"data-code-lang": "text",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"$t": "if ( user is trusted ) \n  return true\nelse\n  let's load the revision from replica, return true based on the the status of the revision\n  oh it doesn't exist (yet), return false"
								}
							},
							{
								"class": "remarkup-code-block",
								"data-code-lang": "php",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"span": [
										{
											"class": "nv",
											"$t": "$allowed"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nv",
											"$t": "$this"
										},
										{
											"class": "o",
											"$t": "->"
										},
										{
											"class": "na",
											"data-symbol-name": "user",
											"$t": "user"
										},
										{
											"class": "o",
											"$t": "->"
										},
										{
											"class": "na",
											"data-symbol-name": "isAllowedAny",
											"$t": "isAllowedAny"
										},
										{
											"class": "o",
											"$t": "("
										},
										{
											"class": "o",
											"$t": "...("
										},
										{
											"class": "k",
											"$t": "array"
										},
										{
											"class": "o",
											"$t": ")"
										},
										{
											"class": "nv",
											"$t": "$permissions"
										},
										{
											"class": "o",
											"$t": ");"
										},
										{
											"class": "k",
											"$t": "if"
										},
										{
											"class": "o",
											"$t": "("
										},
										{
											"class": "nv",
											"$t": "$allowed"
										},
										{
											"class": "o",
											"$t": ")"
										},
										{
											"class": "o",
											"$t": "{"
										},
										{
											"class": "no",
											"$t": ""
										},
										{
											"class": "no",
											"$t": "return"
										},
										{
											"class": "kc",
											"$t": "true"
										},
										{
											"class": "o",
											"$t": ";"
										},
										{
											"class": "o",
											"$t": "}"
										},
										{
											"class": "k",
											"$t": "return"
										},
										{
											"class": "o",
											"$t": "!"
										},
										{
											"class": "nv",
											"$t": "$workflow"
										},
										{
											"class": "o",
											"$t": "->"
										},
										{
											"class": "na",
											"data-symbol-name": "isDeleted",
											"$t": "isDeleted"
										},
										{
											"class": "o",
											"$t": "();"
										}
									]
								}
							}
						],
						"h4": [
							{
								"class": "remarkup-header",
								"$t": "Enter X-Wikimedia-Debug"
							},
							{
								"class": "remarkup-header",
								"$t": "Reproducing the bug locally"
							},
							{
								"class": "remarkup-header",
								"$t": "Conclusion"
							}
						],
						"ul": {
							"class": "remarkup-list",
							"li": [
								{
									"class": "remarkup-list-item",
									"$t": "If you're having difficulty tracking down the code path, consider using the profiler in the X-Wikimedia-Debug browser extension"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Diagnostic code is helpful (even if it didn't pinpoint the problem here) and debug level logging should be considered instead of silent returns"
								},
								{
									"class": "remarkup-list-item",
									"a": {
										"href": "https://www.mediawiki.org/wiki/MediaWiki-Docker-Dev",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "how to adjust its database replication lag"
									}
								}
							]
						},
						"hr": {
							"class": "remarkup-hr"
						}
					}
				}
			},
			{
				"title": "Magic Numbers",
				"link": {
					"href": "/phame/live/7/post/142/magic_numbers/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/142/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2019-01-24T10:40:32+00:00",
				"updated": "2019-02-06T22:11:20+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"em": {
									"a": [
										{
											"href": "https://calendar.perfplanet.com/2018/magic-numbers/",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "Previously posted"
										},
										{
											"href": "https://calendar.perfplanet.com/2018/",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "2018 Performance Calendar"
										}
									]
								}
							},
							{
								"a": {
									"href": "https://developers.google.com/web/fundamentals/performance/rail#ux",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "RAIL"
								}
							},
							{
								"a": {
									"href": "https://youtu.be/XvZ7-Uh0R4Q?t=1350",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "there's a lot of science behind those numbers"
								}
							},
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Wikimedia_Performance_Team/Perceived_Performance",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "an extensive literature\nreview of web performance perception academic research"
								}
							},
							{
								"br": {}
							},
							{
								"a": [
									{
										"href": "http://yusufarslan.net/sites/yusufarslan.net/files/upload/content/Miller1968.pdf",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Response Time in Man-Computer Conversational Transactions"
									},
									{
										"href": "https://www.nngroup.com/articles/response-times-3-important-limits/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Response Times: The 3 Important Limits"
									}
								]
							},
							{
								"em": "science"
							},
							{
								"a": {
									"href": "http://yusufarslan.net/sites/yusufarslan.net/files/upload/content/Miller1968.pdf",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "read the Miller paper"
								}
							},
							"Miller advocates to intentionally delay errors by a whole 2 seconds, in order to avoid disturbing the user's train of thought. If it sounds silly and dated, it's because it is, just like the rest of Miller's paper. Like Nielsen's, it means well, but pulls magic numbers out of thin air. Not a single experiment was conducted, not a single human being studied or surveyed in the making of these magic numbers. No research data to verify the claims.",
							{
								"em": "Are 100 ms Fast Enough? Characterizing Latency Perception Thresholds in Mouse-Based Interaction"
							},
							"This is quite different than the 100ms universal treshold we keep hearing about. The study goes on to show that subjects with a habit of playing action video games tend to have a lower threshold than others. Showing that cultural difference can affect that limit.",
							"When you think about it, it does make sense that the real threshold is a range that depends on demographics, and that there's no reason there should be a universal threshold that happens to be a round number. It would be all too magical, wouldn't it?",
							"A major weakness in a lot of papers doing real science I've reviewed, however, is that when actual research on people is done, it's usually on a group that lacks diversity. It's often whoever scientists have easy access to. Typically students from the same university. They're subjects that are educated, proficient with technology use and often with a monetary incentive to participate, which obviously skews the results. And yet, after performing a study on a dozen paid students, these research papers will often claim to have proven a universal truth about all human beings.This is actually true of the study I quoted earlier about the 100ms threshold, with the minor difference of students earning credits rather than money. Here's their description of study participants:",
							"Another very common weakness of studies I've found is that they're often performed in labs using fake browsers, predetermined browsing scenarios, or by having people watch videos of page loads. All of which are very disconnected from the real experience of browsing the web.Overall we should remain skeptical of studies' results when their experimental setup was questionable in those ways. While the 100ms study disproved the 100ms universality myth with just 20 people, it remains insufficient to prove that the different numbers that emerged were any more universal.",
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Wikimedia_Performance_Team/Perceived_Performance",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "my literature review"
								}
							},
							{
								"a": {
									"href": "https://wpostats.com/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "WPO stats"
								}
							},
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Wikimedia_Performance_Team",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Wikimedia Performance Team"
								}
							},
							{
								"em": "Photo credit: Doc Searls, Tulane Public Relations CC-BY-SA 2.0"
							}
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Following the citation trail"
							},
							{
								"class": "remarkup-header",
								"$t": "What happens when you do real science"
							},
							{
								"class": "remarkup-header",
								"$t": "Proving universal facts about mankind based on students down the hall"
							},
							{
								"class": "remarkup-header",
								"$t": "Everything sucks, now what?"
							}
						],
						"div": [
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"td": {
												"div": {
													"class": "phabricator-remarkup-embed-layout-left",
													"a": {
														"href": "https://phab.wmfusercontent.org/file/data/xcdaaw7hhktmg6snovig/PHID-FILE-44alr6dd3ujcprc44p7w/640px-Jakob_Nielsen_1.jpg",
														"class": "phabricator-remarkup-embed-image-full",
														"data-sigil": "lightboxable",
														"data-meta": "0_11",
														"img": {
															"src": "https://phab.wmfusercontent.org/file/data/xcdaaw7hhktmg6snovig/PHID-FILE-44alr6dd3ujcprc44p7w/640px-Jakob_Nielsen_1.jpg",
															"height": "480",
															"width": "640"
														}
													}
												}
											}
										},
										{
											"td": {
												"strong": "Trust me, I know things!"
											}
										},
										{}
									]
								}
							},
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"td": {
												"div": {
													"class": "phabricator-remarkup-embed-layout-left",
													"a": {
														"href": "https://phab.wmfusercontent.org/file/data/vgr2frve4n6o6s7cz2ya/PHID-FILE-kgk4c2fbfq6zomyl73yo/402px-Zan_Zig_performing_with_rabbit_and_roses%2C_magician_poster%2C_1899.jpg",
														"class": "phabricator-remarkup-embed-image-full",
														"data-sigil": "lightboxable",
														"data-meta": "0_12",
														"img": {
															"src": "https://phab.wmfusercontent.org/file/data/vgr2frve4n6o6s7cz2ya/PHID-FILE-kgk4c2fbfq6zomyl73yo/402px-Zan_Zig_performing_with_rabbit_and_roses%2C_magician_poster%2C_1899.jpg",
															"height": "600",
															"width": "402"
														}
													}
												}
											}
										},
										{
											"td": {
												"strong": "Googler revealing the next iteration of RAIL guidelines"
											}
										},
										{}
									]
								}
							},
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"td": {
												"div": {
													"class": "phabricator-remarkup-embed-layout-left",
													"a": {
														"href": "https://phab.wmfusercontent.org/file/data/lzs3s6vcro7phkgtaci4/PHID-FILE-ls4nwkge4hfjsdfl6dk2/Student_in_Class_%283618969705%29.jpg",
														"class": "phabricator-remarkup-embed-image-full",
														"data-sigil": "lightboxable",
														"data-meta": "0_13",
														"img": {
															"src": "https://phab.wmfusercontent.org/file/data/lzs3s6vcro7phkgtaci4/PHID-FILE-ls4nwkge4hfjsdfl6dk2/Student_in_Class_%283618969705%29.jpg",
															"height": "417",
															"width": "640"
														}
													}
												}
											}
										},
										{
											"td": {
												"strong": "Can you spot the person younger than 19 or older than 36?"
											}
										},
										{}
									]
								}
							}
						],
						"blockquote": [
							{
								"p": {
									"br": {}
								}
							},
							{
								"p": "The latency perception thresholds’ range was 34–137 ms with a mean of 65 ms (Median = 54 ms) and a standard deviation of 30 ms."
							},
							{
								"p": "Twenty students (10 female, age 19–36 years, M = 23.45, SD = 3.32) which were recruited via the local psychology student mailing list took part in the experiment. All participants had normal or corrected-to-normal vision and normally used their right hand for handling computer mice. Participants signed an informed consent sheet at the beginning of the experiment and received partial course credit for participation."
							}
						]
					}
				}
			},
			{
				"title": "Why performance matters",
				"link": {
					"href": "/phame/live/7/post/131/why_performance_matters/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/131/",
				"author": {
					"name": "Imarlier (Ian Marlier)"
				},
				"published": "2018-12-12T16:21:17+00:00",
				"updated": "2019-01-13T01:19:13+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							"There are practical reasons that web performance matters.  From a user perspective, a site that’s slow results in frustration, annoyance, and ultimately a preference for alternatives.  From the perspective of a site operator, frustrated users are users who aren’t going to return, and that makes it more difficult to accomplish your mission (be it commercial or public service).  Optimizations keep people happy, keep them coming back, and keep them engaged[1].",
							"But, there’s a far more important reason to care about performance, especially for an organization like Wikimedia: improving performance is an essential step toward equity of access.",
							"There are a multitude of factors that influence how quickly a web site loads.  Many of these are universal to every user: the software itself, the operational environment in which that software runs, the network that carries the bits from the server.  Improvement in any of these areas benefits every consumer of the site.",
							"This doesn’t account for the large number of factors that are user specific.  Among the factors that can significantly influence how quickly a web page loads for a given user are geography (a user who lives further away from the servers that host a web site will typically have slower access than a user who is closer); the network between the server and the user (a network that is less developed may be slower, or more susceptible to congestion); the user’s connection (mobile data is slower than wired broadband in most cases); and the user’s actual device (an old computer will load pages more slowly than a new one).",
							"The common thread between these factors is that they correlate to socioeconomic and social factors, rather than technical ones.  Wealthier people, in more developed countries, have a significantly easier time accessing the vast resources of the Internet than others.  If an increasingly networked world is going to result in a more equal human society, we need to make thoughtful interventions, including interventions focused on performance.",
							{
								"strong": "Geography",
								"br": {}
							},
							{
								"strong": "Backbone Networks",
								"br": {},
								"a": [
									{
										"href": "https://en.wikipedia.org/wiki/Internet_backbone",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Backbone networks"
									},
									{
										"href": "https://blogs.voanews.com/all-about-america/2015/09/30/detailed-map-reveals-hidden-backbone-of-us-internet/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "connect cities like San Francisco, Seattle, and New York"
									},
									{
										"href": "https://www.submarinecablemap.com/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "traverse the North Atlantic and North Pacific"
									}
								]
							},
							{
								"strong": "Last-mile connectivity",
								"br": {}
							},
							{
								"a": {
									"href": "https://en.wikipedia.org/wiki/List_of_countries_by_number_of_broadband_Internet_subscriptions",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "In many countries, only a tiny fraction of the population has any access to high-speed internet"
								},
								"em": {
									"strong": "2"
								}
							},
							{
								"strong": "Device quality",
								"br": {},
								"a": {
									"href": "https://phabricator.wikimedia.org/phame/live/7/post/109/mobile_web_performance_the_importance_of_the_device/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "the performance difference for a site when run on a high-end versus a low-end device can be quite significant"
								}
							},
							"Though there is no single change that we can make that will address all of these factors, addressing each of them is core to serving the mission of the Wikimedia Foundation, and of the Wikimedia movement as a whole.",
							"One ongoing element of this work is research to understand the actual factors that influence user perception of performance, and the way that user satisfaction is impacted when a page loads slowly.  This allows us to make data-driven decisions about where to spend our time and our energy.",
							{
								"a": {
									"href": "https://blog.wikimedia.org/2018/04/24/new-data-center-singapore/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "expanding our cache footprint can help to minimize the effects of geography"
								}
							},
							"We’re not in a position to address inequality of backbone or last-mile network infrastructure -- that’s something best left to telecom companies, governments, or non-profit organizations that have chosen that as their work.  What we can do is to minimize the effects of these disparities by reducing the number of bytes that need to go down the wire in order to display a page, by exploring technologies like peer-to-peer distribution to eliminate them altogether, or by increasing usage of offline content that can be downloaded in bulk using public high-speed connections.",
							"Finally, we can aggressively work to lower the compute cost of each page that we serve, so that the cost or the age of a user’s device doesn’t impact their ability to read, learn, and contribute to the world of free knowledge.",
							"Performance engineering matters, in other words, because it gives us a way to eliminate technological divides that are otherwise difficult, expensive, or even impossible to address at a systemic level.",
							{
								"a": [
									{
										"href": "http://engineroom.ft.com/2016/04/04/a-faster-ft-com/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "http://engineroom.ft.com/2016/04/04/a-faster-ft-com/"
									},
									{
										"href": "https://medium.com/@vikigreen/impact-of-slow-page-load-time-on-website-performance-40d5c9ce568a",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "https://medium.com/@vikigreen/impact-of-slow-page-load-time-on-website-performance-40d5c9ce568a"
									}
								]
							},
							{
								"a": {
									"href": "http://blog.chriszacharias.com/page-weight-matters",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "an anecdote about the creation of a very lightweight video display page"
								},
								"em": "got worse"
							}
						],
						"hr": [
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							}
						]
					}
				}
			},
			{
				"title": "Perf Matters at Wikipedia 2015",
				"link": {
					"href": "/phame/live/7/post/124/perf_matters_at_wikipedia_2015/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/124/",
				"author": {
					"name": "Krinkle (Timo Tijhof)"
				},
				"published": "2019-02-14T16:05:00+00:00",
				"updated": "2019-02-21T14:43:50+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"h3": [
							{
								"class": "remarkup-header",
								"$t": "Hello, WANObjectCache"
							},
							{
								"class": "remarkup-header",
								"$t": "First paint time now under 900ms"
							},
							{
								"class": "remarkup-header",
								"$t": "Hello, WebPageTest"
							},
							{
								"class": "remarkup-header",
								"$t": "The journey to Thumbor begins"
							},
							{
								"class": "remarkup-header",
								"$t": "Save timing reduced by 50%"
							}
						],
						"p": [
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Requests_for_comment/Master-slave_datacenter_strategy_for_MediaWiki",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "multiple data centres"
								}
							},
							"The MediaWiki application that powers Wikipedia relies heavily on object caching. We use Memcached as horizontally scaled key-value store, and we’d like to keep the cache local to each data centre. This minimises dependencies between data centres, and makes better use of storage capacity (based on local needs).",
							{
								"a": {
									"href": "https://github.com/wikimedia/mediawiki/blob/1.32.0/includes/libs/objectcache/WANObjectCache.php#L583-L614",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "broadcasts “purge” events"
								}
							},
							{
								"a": {
									"href": "https://doc.wikimedia.org/mediawiki-core/1.30.0/php/classWANObjectCache.html#details",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "WANObjectCache’s design"
								}
							},
							"In July we set out a goal: improve page load performance so our median first paint time would go down from approximately 1.5 seconds to under a second – and stay under it!",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-right phabricator-remarkup-embed-float-right",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/aubuhmyuf36jr5feucds/PHID-FILE-3grypqxwgck7qxhia5fx/firstpaint_graphite.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_14",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/aubuhmyuf36jr5feucds/PHID-FILE-3grypqxwgck7qxhia5fx/firstpaint_graphite.png",
											"height": "180"
										}
									}
								},
								"a": {
									"href": "https://phabricator.wikimedia.org/T107399",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "converting these last two scripts"
								}
							},
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/T107399",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "several blockers"
									},
									{
										"href": "https://github.com/wikimedia/mediawiki/blob/1.31.0/includes/resourceloader/ResourceLoader.php#L1494-L1514",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "wrap their code"
									},
									{
										"href": "https://github.com/wikimedia/mediawiki/blob/1.31.0/resources/src/startup.js#L136-L144",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "process the closures"
									}
								]
							},
							"Another major blocker was the subset of community-developed gadgets that didn’t yet use the module loader (introduced in 2011). These legacy scripts assumed a global scope for variables, and depended on browser behaviour specific to serially loaded, synchronous, scripts. Between July 2015 and August 2015, I worked with the community to develop a migration guide. And, after a short deprecation period, the legacy loader was removed.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/m6hllri46kc7s52hh4t2/PHID-FILE-by3iiutxbxn3k3jca522/firstpaint_coalweb.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_15",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/m6hllri46kc7s52hh4t2/PHID-FILE-by3iiutxbxn3k3jca522/firstpaint_coalweb.png",
											"height": "211",
											"alt": "Line graph that plots the firstPaint metric for August 2015. The line drops from approximately one and a half seconds to 890 milliseconds."
										}
									}
								}
							},
							"Previously, we only collected performance metrics for Wikipedia from sampled real-user page loads. This is super and helps detect trends, regressions, and other changes at large. But, to truly understand the characteristics of what made a page load a certain way, we need synthetic testing as well.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T109666",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "understand the performance"
								}
							},
							{
								"a": {
									"href": "https://grafana.wikimedia.org/d/000000210/webpagetest?orgId=1",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "visualise the data"
								}
							},
							{
								"a": {
									"href": "https://wikitech.wikimedia.org/wiki/Performance/WebPageTest",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "check Wikitech"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/x4afkxbbf27r3xrtwt6a/PHID-FILE-nsod5j3be2d2hupk3esu/webpagetest.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_16",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/x4afkxbbf27r3xrtwt6a/PHID-FILE-nsod5j3be2d2hupk3esu/webpagetest.png",
											"height": "269"
										}
									}
								}
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T110858",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "evaluated various thumbnailing services"
								}
							},
							"Gilles implemented support for Thumbor in the MediaWiki-Vagrant development environment.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/phame/live/7/post/55/the_journey_to_thumbor_part_1_rationale/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "The Journey to Thumbor (part 1)"
								}
							},
							"Save timing is one of the key performance metrics for Wikipedia. It measures the time from when a user presses “Publish changes” when editing – until the user’s browser starts to receive a response. During this time, many things happen. MediaWiki parses the wiki-markup into HTML, which can involve page macros, sub-queries, templates, and other parser extensions. These inputs must be saved to a database. There may also be some cascading updates, such as the page’s membership in a category. And last but not least, there is the network latency between user’s device and our data centres.",
							{
								"a": [
									{
										"href": "https://commons.wikimedia.org/w/index.php?title=File:Wikimedia_Foundation_Quarterly_Report,_FY_2014-15_Q3_(January-March).pdf&page=3",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "quarterly report"
									},
									{
										"href": "https://commons.wikimedia.org/w/index.php?title=File:Wikimedia_Foundation_Quarterly_Report,_FY_2014-15_Q4_(April-June).pdf&page=3",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "report"
									},
									{
										"href": "https://commons.wikimedia.org/w/index.php?title=File:Wikimedia_Foundation_Quarterly_Report,_FY_2015-16_Q1_(July-September).pdf&page=3",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "report"
									}
								]
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/xzmcd2m6kfhqarahqmaj/PHID-FILE-6nnof7qhci64wqnltzy4/savetiming_2s-1_6s-1s_from_May_to_June.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_17",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/xzmcd2m6kfhqarahqmaj/PHID-FILE-6nnof7qhci64wqnltzy4/savetiming_2s-1_6s-1s_from_May_to_June.png",
											"height": "278",
											"alt": "Line graph of the median save timing metric, over 2015. Showing a drop from two seconds to one and a half in May, and another drop in June, gradually going further down to one second."
										}
									}
								}
							},
							{
								"a": [
									{
										"href": "https://github.com/wikimedia/mediawiki/graphs/contributors?from=2015-01-01&to=2016-01-01&type=c",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "to MediaWiki core"
									},
									{
										"href": "https://gerrit.wikimedia.org/r/#/q/owner:%22Aaron+Schulz+%253Caschulz%2540wikimedia.org%253E%22+branch:master+before:2016-01-02+after:2014-12-30+projects:mediawiki",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "to extensions"
									}
								]
							},
							"Many of these changes involved deferring work to happen post-send. That is, after the server sends the HTTP response to the user and closes the main database transaction. Examples of tasks that now happen post-send are: cascading updates, emitting “recent changes” objects to the database and to pub-sub feeds, and doing automatic user rights promotions for the editing user based on their current age and total edit count.",
							"Aaron also implemented the “async write” feature in the multi-backend object cache interface. MediaWiki uses this for storing the parser cache HTML in both Memcached (tier 1) and MySQL (tier 2). The second write now happens post-send.",
							"By re-ordering these tasks to occur post-send, the server can send a response back to the user sooner.",
							"A major category of changes were improvements to database queries. For example, reducing lock contention in SQL, refactoring code in a way that reduces the amount of work done between two write queries in the same transaction, splitting large queries into smaller ones, and avoiding use of database master connections whenever possible.",
							"These optimisations reduced chances of queries being stalled, and allow them to complete more quickly.",
							"The aforementioned work on WANObjectCache also helped a lot. Whenever we converted a feature to use this interface, we reduced the amount of blocking cache computation that happened mid-request. WANObjectCache also performs probabilistic preemptive refreshes of near-expiring values, which can prevent cache stampedes.",
							{
								"a": {
									"href": "https://gerrit.wikimedia.org/r/#/c/mediawiki/extensions/AbuseFilter/+/211951/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "disabled"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-right phabricator-remarkup-embed-float-right",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/pysti4uli7xcvlcxp27s/PHID-FILE-j2vyfqsirr3i2mhqngsw/savetiming_1_1s-1_0s_September_stretch.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_18",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/md23w2zfu4bkiwqw4sbs/PHID-FILE-o5j5cuk4d5q5h7g27dgc/preview-savetiming_1_1s-1_0s_September_stretch.png",
											"width": "220",
											"height": "70.559921414538"
										}
									}
								}
							},
							{
								"a": {
									"href": "https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "LBYL race conditions"
								}
							},
							"Sajax was a library for invoking a subroutine on the server, and receiving its return value as JSON from client-side JavaScript. In March 2006, it was adopted in MediaWiki to power the autocomplete feature of the search input field.",
							{
								"a": {
									"href": "https://www.mail-archive.com/wikitech-l@lists.wikimedia.org/msg63136.html",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "deprecated Sajax"
								}
							},
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/T55120#1502017",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "decided"
									},
									{
										"href": "https://www.mail-archive.com/wikitech-l@lists.wikimedia.org/msg80733.html",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "high time"
									},
									{
										"href": "https://gerrit.wikimedia.org/r/#/c/mediawiki/core/+/228768/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "finish"
									},
									{
										"href": "https://www.mail-archive.com/wikitech-l@lists.wikimedia.org/msg82007.html",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Goodbye"
									}
								]
							},
							{
								"a": {
									"href": "https://blog.wikimedia.org/2015/06/12/securing-wikimedia-sites-with-https/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "on the Wikimedia blog"
								}
							},
							"— Timo Tijhof"
						],
						"hr": [
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							},
							{
								"class": "remarkup-hr"
							}
						],
						"h4": [
							{
								"class": "remarkup-header",
								"$t": "Deferring tasks to post-send"
							},
							{
								"class": "remarkup-header",
								"em": "with"
							},
							{
								"class": "remarkup-header",
								"$t": "Avoid synchronous cache re-computations"
							},
							{
								"class": "remarkup-header",
								"$t": "Profiling can be expensive"
							},
							{
								"class": "remarkup-header",
								"$t": "And more"
							},
							{
								"class": "remarkup-header",
								"$t": "So long, Sajax!"
							},
							{
								"class": "remarkup-header",
								"$t": "Further reading"
							}
						]
					}
				}
			},
			{
				"title": "Machine learning: how to undersample the wrong way",
				"link": {
					"href": "/phame/live/7/post/123/machine_learning_how_to_undersample_the_wrong_way/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/123/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2018-10-15T13:37:07+00:00",
				"updated": "2018-11-07T10:47:40+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://meta.wikimedia.org/wiki/Research:Study_of_performance_perception_on_Wikimedia_projects",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "in collaboration with researchers"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Real_user_monitoring",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "RUM"
									},
									{
										"href": "https://commons.wikimedia.org/wiki/File:Wikimedia_performance_perception_survey_screenshot_in_English.png",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "microsurvey"
									}
								]
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/o2wt32xdvip2omdva2pn/PHID-FILE-d6gjnnuwpmwhq7u7tivx/Sans_titre.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_19",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/fq4bnxkssnxhjauoqfdy/PHID-FILE-6jsaqxbsex5dlircqpfg/preview-Sans_titre.png",
											"width": "220",
											"height": "142.00668896321"
										}
									}
								}
							},
							"Having never done any machine learning before, I did a few rookie mistakes. In this post I'll explain the biggest one, which led us to believe for some time that we had built a very well-performing model.",
							{
								"a": [
									{
										"href": "http://www.chioka.in/class-imbalance-problem/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "class imbalance"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Oversampling_and_undersampling_in_data_analysis",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "undersampling"
									}
								]
							},
							"Sounds simple, right? in Python/pandas it looks something like this:",
							"Essentially we sort by value, with the ones we have the least values for at the top, then we used head() to get the first N records, where N is twice the amount of negative survey responses. With this, we should end up with exactly the same amount of rows for each value (negative and positive response). So far so good.",
							"Then we apply our machine learning algorithm to the dataset (for example, for a binary classification of this kind, random forest is a good choice). At first the results were poor, and then we added a basic feature we forgot to include: time. Time of day, day of the week, day of the year, etc. When adding these, things started to work incredibly well! Surely we discovered something groundbreaking about seasonality/time-dependence in this data. Or...",
							"A critical mistake was made in the above code snippet. The original dataset has chronological records. When we sort by \"response\" value, this chronological order remains, within the context of each sorted section of the dataset.",
							{
								"strong": [
									"all",
									"over the full timespan",
									"a much shorter timespan"
								]
							},
							"The reason why the model started giving excellent results when we introduced time as a feature, is that it basically detected the date discrepancy in our dataset! It's pretty easy to guess that a response is likely positive if you look at its date. If the date is later than June 15th, everything in our dataset is negative responses... Our machine learning model just started excelling at detecting our mistake :)",
							"The workaround for this issue is simply to pick N positive responses at random over the whole timespan when undersampling, to make sure that the dataset is consistent:",
							"This way we ensure that we're not introducing a time imbalance when working around our class imbalance."
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Class imbalance"
							},
							{
								"class": "remarkup-header",
								"$t": "I've made a huge mistake"
							},
							{
								"class": "remarkup-header",
								"$t": "A simple solution"
							}
						],
						"div": [
							{
								"class": "remarkup-code-block",
								"data-code-lang": "python",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"span": [
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "sort_values"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "by"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "p",
											"$t": "["
										},
										{
											"class": "n",
											"$t": "column_prefix"
										},
										{
											"class": "o",
											"$t": "+"
										},
										{
											"class": "s",
											"$t": "'response'"
										},
										{
											"class": "p",
											"$t": "],"
										},
										{
											"class": "n",
											"$t": "inplace"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "bp",
											"$t": "True"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "n",
											"$t": "negative_responses_count"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "p",
											"$t": "["
										},
										{
											"class": "n",
											"$t": "column_prefix"
										},
										{
											"class": "o",
											"$t": "+"
										},
										{
											"class": "s",
											"$t": "'response'"
										},
										{
											"class": "p",
											"$t": "]"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "value_counts"
										},
										{
											"class": "p",
											"$t": "()["
										},
										{
											"class": "o",
											"$t": "-"
										},
										{
											"class": "mi",
											"$t": "1"
										},
										{
											"class": "p",
											"$t": "]"
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "head"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "n"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nb",
											"$t": "int"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "negative_responses_count"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "o",
											"$t": "*"
										},
										{
											"class": "mi",
											"$t": "2"
										},
										{
											"class": "p",
											"$t": ")"
										}
									]
								}
							},
							{
								"class": "remarkup-code-block",
								"data-code-lang": "python",
								"data-sigil": "remarkup-code-block",
								"pre": {
									"class": "remarkup-code",
									"span": [
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "sort_values"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "by"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "p",
											"$t": "["
										},
										{
											"class": "n",
											"$t": "column_prefix"
										},
										{
											"class": "o",
											"$t": "+"
										},
										{
											"class": "s",
											"$t": "'response'"
										},
										{
											"class": "p",
											"$t": "],"
										},
										{
											"class": "n",
											"$t": "inplace"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "bp",
											"$t": "True"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "n",
											"$t": "negative_responses"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "head"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "n"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nb",
											"$t": "int"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "negative_responses_count"
										},
										{
											"class": "p",
											"$t": "))"
										},
										{
											"class": "n",
											"$t": "positive_responses"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "tail"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "n"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nb",
											"$t": "int"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "shape"
										},
										{
											"class": "p",
											"$t": "["
										},
										{
											"class": "mi",
											"$t": "0"
										},
										{
											"class": "p",
											"$t": "]"
										},
										{
											"class": "o",
											"$t": "-"
										},
										{
											"class": "n",
											"$t": "negative_responses_count"
										},
										{
											"class": "p",
											"$t": "))"
										},
										{
											"class": "n",
											"$t": "positive_responses"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "shuffle"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "positive_responses"
										},
										{
											"class": "p",
											"$t": ")"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "head"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "n"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "nb",
											"$t": "int"
										},
										{
											"class": "p",
											"$t": "("
										},
										{
											"class": "n",
											"$t": "negative_responses_count"
										},
										{
											"class": "p",
											"$t": "))"
										},
										{
											"class": "n",
											"$t": "dataset"
										},
										{
											"class": "o",
											"$t": "="
										},
										{
											"class": "n",
											"$t": "pandas"
										},
										{
											"class": "o",
											"$t": "."
										},
										{
											"class": "n",
											"$t": "concat"
										},
										{
											"class": "p",
											"$t": "(["
										},
										{
											"class": "n",
											"$t": "negative_responses"
										},
										{
											"class": "p",
											"$t": ","
										},
										{
											"class": "n",
											"$t": "positive_responses"
										},
										{
											"class": "p",
											"$t": "])"
										}
									]
								}
							}
						]
					}
				}
			},
			{
				"title": "Best friends forever",
				"link": {
					"href": "/phame/live/7/post/122/best_friends_forever/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/122/",
				"author": {
					"name": "Peter (Peter Hedenskog)"
				},
				"published": "2018-10-03T09:43:53+00:00",
				"updated": "2018-11-04T13:38:57+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/phame/post/view/117/performance_testing_in_a_controlled_lab_environment_-_the_metrics/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "synthetic"
									},
									{
										"href": "https://phabricator.wikimedia.org/phame/post/view/83/measuring_wikipedia_page_load_times/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "RUM"
									}
								]
							},
							"In our synthetic lab environment, we update the browser version in a controlled way. When there’s a new browser release, we wait for a new Docker container with the latest version. We stop the current tests, update the Docker container and restart the tests and look at the metrics that we graph in Grafana. That way, we can check whether a new browser version introduced a regression.",
							"Our users’ browsers usually upgrade slowly. The browser vendors usually push the browser to a percentage of users first, and then give the green light to update all of them. When we collect performance metrics, we also collect browser names and versions. That way we can see when users pick up a new browser version and if that version has any impact on our metrics. The adoption of new versions by real users takes time, and when we see a regression in our synthetic testing, it can take a couple of weeks until we see the same effect in our user metrics.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T196242",
									"class": "phui-tag-view phui-tag-type-object ",
									"data-sigil": "hovercard",
									"data-meta": "0_35",
									"span": {
										"class": "phui-tag-core phui-tag-color-object",
										"$t": "T196242"
									}
								}
							},
							{
								"a": {
									"href": "https://en.wikipedia.org/wiki/Facebook",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "https://en.wikipedia.org/wiki/Facebook"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/v22h2kkeskdwuodpvqpn/PHID-FILE-vsca4xvj6voxftkio33p/aa.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_20",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/v22h2kkeskdwuodpvqpn/PHID-FILE-vsca4xvj6voxftkio33p/aa.png",
											"width": "600"
										}
									}
								}
							},
							"Most of the pages we test were affected, but not all of them.  For our tests of the \"Barack Obama\" English Wikipedia article, it was hard to spot any change at all.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/p3dfuapz4bx6tknv6viv/PHID-FILE-3ypsos646xt7v23lfflk/bb.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_21",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/p3dfuapz4bx6tknv6viv/PHID-FILE-3ypsos646xt7v23lfflk/bb.png",
											"width": "600"
										}
									}
								}
							},
							{
								"a": [
									{
										"href": "https://wikitech.wikimedia.org/wiki/Performance/WebPageTest",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "WebPageTest"
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/Performance/WebPageReplay",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Browsertime/WebPageReplay"
									}
								]
							},
							{
								"a": {
									"href": "https://en.wikipedia.org/wiki/Law_of_Jante",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "to do with a change we have done"
								}
							},
							{
								"a": {
									"href": "https://bugs.chromium.org/p/chromium/issues/detail?id=849108",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "issue 849108"
								}
							},
							"The next step is to see if we can find the same change in the metrics that we collect directly from users. The firstPaint metric in Chrome is similar to the first visual change metric we use in our synthetic testing. Which means that when we have enough traffic coming from Chrome 67, we should be able to see the change on first paint.",
							"The conversion rate from Chrome 66 to 67 looked like this:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/vpg4fi7z57ehbithxi4i/PHID-FILE-h4hv5ulz24kmke3k4xr7/Screen_Shot_2018-09-28_at_11.00.02_AM.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_22",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/vpg4fi7z57ehbithxi4i/PHID-FILE-h4hv5ulz24kmke3k4xr7/Screen_Shot_2018-09-28_at_11.00.02_AM.png",
											"width": "600"
										}
									}
								}
							},
							"If you look real closely, you can see that around the 15th of June we started getting enough traffic for Chrome 67 to see the effect on our metrics.",
							"To see the change in Chrome, we look at the metrics we collect from all versions of Chrome and check the median and 75th percentile of first paint.",
							"In the following graph, we take the average over one day to try to minimize spikes. If you look at the right side (Chrome 67) of the graphs you can see that it has a slightly higher first paint than to the left (Chrome 66).",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/pyphrmdqxr5ivv33dxpx/PHID-FILE-zkidc5mkrpcsntict7ve/chrome67-66.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_23",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/pyphrmdqxr5ivv33dxpx/PHID-FILE-zkidc5mkrpcsntict7ve/chrome67-66.png",
											"width": "600"
										}
									}
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/5wohmlj3qs7dgbuhfzls/PHID-FILE-bvdps7ttb2p7mwvdhiqh/chrome66-67.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_24",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/5wohmlj3qs7dgbuhfzls/PHID-FILE-bvdps7ttb2p7mwvdhiqh/chrome66-67.png",
											"width": "600"
										}
									}
								}
							},
							"To verify the metrics, we also looked at first paint on mobile. There’s no regression there, it rather looks like there could be a small win in first paint.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/kgc7umszyldhv3rzsd5a/PHID-FILE-ytktl6g6cmd5ozhrhk7q/Screen_Shot_2018-09-28_at_11.06.04_AM.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_25",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/kgc7umszyldhv3rzsd5a/PHID-FILE-ytktl6g6cmd5ozhrhk7q/Screen_Shot_2018-09-28_at_11.06.04_AM.png",
											"width": "600"
										}
									}
								}
							},
							"To be 100% sure that there’s nothing we introduced, we take another look at synthetic testing at that time when the increase in first paint was seen for real users (15th of June).",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/2jyrusaium6letlk4wkc/PHID-FILE-m7ek2kebfjg5aqem5vg3/hepp222.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_26",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/2jyrusaium6letlk4wkc/PHID-FILE-m7ek2kebfjg5aqem5vg3/hepp222.png",
											"width": "600"
										}
									}
								}
							},
							"There’s no increase in the metrics from synthetic tests at that time. This confirms it was a (small) regression in Chrome 67.",
							"Some time ago, our performance alerts in Grafana fired about first paint in Chrome having increased for our users. We looked at it, and couldn’t find an exact issue that could have caused it. It looked like the metric had slowly increased over time. That type of regression are always the hardest to deal with because it’s hard to see exactly what’s causing the regression.",
							"We could see the regression both on desktop and mobile. It was most obvious when we checked the first paint on mobile. You can see the weekly pattern we have but the highs are getting higher and higher.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/4w7hptoocsaj4bjz3vy3/PHID-FILE-feqdcqmm3b3yydan652o/Screen_Shot_2018-10-01_at_6.42.33_PM.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_27",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/4w7hptoocsaj4bjz3vy3/PHID-FILE-feqdcqmm3b3yydan652o/Screen_Shot_2018-10-01_at_6.42.33_PM.png",
											"width": "600"
										}
									}
								}
							},
							"But we actually had the answer: When we updated to Chrome 69 in our synthetic testing a couple of weeks ago, we again saw an increase in first visual change. This time, we could see the regression on some wikis but not all of them. We’ve switched back and forth between Chrome 68 and 69 and first visual change for the Japanese wiki looked like this:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/ym4lua2opon42qonx3ue/PHID-FILE-dpypjlbzxihylvgcyc4o/backandforth.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_28",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/ym4lua2opon42qonx3ue/PHID-FILE-dpypjlbzxihylvgcyc4o/backandforth.png",
											"width": "600"
										}
									}
								}
							},
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/T203543",
										"class": "phui-tag-view phui-tag-type-object ",
										"data-sigil": "hovercard",
										"data-meta": "0_36",
										"span": {
											"class": "phui-tag-core phui-tag-color-object",
											"$t": "T203543"
										}
									},
									{
										"href": "https://bugs.chromium.org/p/chromium/issues/detail?id=887205",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "an upstream bug"
									}
								]
							},
							"Is this the same regression as we see in RUM?  Let us look again at when the majority of Chrome users switched from 68 to 69.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/w6r623ijwwssmon6bpey/PHID-FILE-57elcrfjstnfkddot5ws/Screen_Shot_2018-09-28_at_11.43.06_AM.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_29",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/w6r623ijwwssmon6bpey/PHID-FILE-57elcrfjstnfkddot5ws/Screen_Shot_2018-09-28_at_11.43.06_AM.png",
											"width": "600"
										}
									}
								}
							},
							"And then let’s go back to first paint metric. First, we look at our metric for desktop only. Around September 22nd almost all traffic was from 69, but you can also see that it was introduced in early September.",
							{
								"div": [
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/revq7b66zd5xiszjae66/PHID-FILE-aw5dx5hfk2mlyl4tap2g/Screen_Shot_2018-10-01_at_8.13.01_PM.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_30",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/revq7b66zd5xiszjae66/PHID-FILE-aw5dx5hfk2mlyl4tap2g/Screen_Shot_2018-10-01_at_8.13.01_PM.png",
												"width": "600"
											}
										}
									},
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/4gehtuj6dfjnj7q47qxe/PHID-FILE-2jju7fkjvjqq5gkuhbte/Screen_Shot_2018-10-01_at_8.12.11_PM.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_31",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/4gehtuj6dfjnj7q47qxe/PHID-FILE-2jju7fkjvjqq5gkuhbte/Screen_Shot_2018-10-01_at_8.12.11_PM.png",
												"width": "600"
											}
										}
									}
								],
								"br": {}
							},
							"It looks like when Chrome 69 was introduced, first paint slowly rose and then when all our metrics were collected from 69, both median and 75th percentile were higher than with 68.",
							"What does it look like for mobile?",
							{
								"div": [
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/42l6i4ztha6oo2kbilh4/PHID-FILE-puzfohix6oven42eck33/Screen_Shot_2018-09-28_at_11.44.58_AM.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_32",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/42l6i4ztha6oo2kbilh4/PHID-FILE-puzfohix6oven42eck33/Screen_Shot_2018-09-28_at_11.44.58_AM.png",
												"width": "600"
											}
										}
									},
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/fdnkkxu2fla3w6r2hv7m/PHID-FILE-py6sqyu2bbf7yq6nfott/Screen_Shot_2018-09-28_at_11.44.44_AM.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_33",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/fdnkkxu2fla3w6r2hv7m/PHID-FILE-py6sqyu2bbf7yq6nfott/Screen_Shot_2018-09-28_at_11.44.44_AM.png",
												"width": "600"
											}
										}
									}
								],
								"br": {}
							},
							"We see the same pattern here. Let us check our synthetic testing at the same time, to see if we could have introduced a code change that affected first visual change. Our metrics on mobile are even more stable than desktop. We look at Swedish Wikipedia, because we didn’t deploy any change on that test server during this period.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/og7rbu4u4ei7hqpu3inc/PHID-FILE-lwgijr2js5wqixpfhdt6/Screen_Shot_2018-09-28_at_12.36.56_PM.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_34",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/og7rbu4u4ei7hqpu3inc/PHID-FILE-lwgijr2js5wqixpfhdt6/Screen_Shot_2018-09-28_at_12.36.56_PM.png",
											"width": "600"
										}
									}
								}
							},
							"No regression there. It looks like this also could be a performance regression in Chrome.",
							"Working with both synthetic metrics and metrics from real users, helps us to confirm issues. In this case, it helped us to find two browser regressions that impact our users. We hope that we can get help from the Chromium team to resolve these issues."
						],
						"h3": [
							{
								"class": "remarkup-header",
								"$t": "Chrome 67"
							},
							{
								"class": "remarkup-header",
								"$t": "Chrome 69"
							},
							{
								"class": "remarkup-header",
								"$t": "Summary"
							}
						],
						"h4": {
							"class": "remarkup-header",
							"$t": "Next step"
						}
					}
				}
			},
			{
				"title": "Performance testing in a controlled lab environment - the metrics",
				"link": {
					"href": "/phame/live/7/post/117/performance_testing_in_a_controlled_lab_environment_-_the_metrics/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/117/",
				"author": {
					"name": "Peter (Peter Hedenskog)"
				},
				"published": "2018-09-21T07:49:33+00:00",
				"updated": "2019-02-14T00:25:52+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							"One of the Performance Team responsibilities at Wikimedia is to keep track of Wikipedias performance. Why is performance important for us? In our case it is easy: We have so many users and if we have a performance regression, we are really affecting people's lives. Maybe you remember our hiring tweet from a couple of years ago?",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/xauocneqxaspxkejesjx/PHID-FILE-ownzgk6z2brwj6mirxtb/wikipedia.PNG",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_37",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/xauocneqxaspxkejesjx/PHID-FILE-ownzgk6z2brwj6mirxtb/wikipedia.PNG",
											"width": "400"
										}
									}
								}
							},
							"If we are slow, we waste users time. And we don’t want to do that. That's why we are really serious about the performance of Wikipedia.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/phame/live/7/post/83/measuring_wikipedia_page_load_times/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "told us"
								}
							},
							"Getting metrics from real users is good because they are close to what people really experience. The problem is that:",
							"That’s why we also test in a lab environment.",
							"Testing in a lab means that we are running a desktop computer (or mobile) in an isolated environment where we try to have the environment as stable as possible. That way we hope that we are able to pick up small performance regressions and know why we have that regression.",
							"In a lab environment we have more control and we love control when we want to measure things! We want to make the conditions between tests to be as similar as possible. If we can control the environment, we can find regressions introduced by our code changes.",
							"Testing in a lab environment helps us with:",
							"But everything isn’t perfect when testing in a lab: We are only testing a small usage group (a specific browser version, specific connection type, one operating system, a couple of URLs). We will miss out on a lot of users scenarios. That’s the big disadvantage of testing in a lab. That’s why it is also important to collect metrics from real users.",
							"One of the things I like with testing in a lab is that we can get more user centered metrics than we can get directly from the browser. We mostly focus on visual metrics.",
							"Visual metrics are when things that happens within the viewport of the browser that the user can see. We collect these metrics by recording a video of the browser screen and then analyzing the video and calculating the metrics.",
							"What’s good with visual metrics is that it is easy to see and understand and easy to relate. They are the best metrics we have today to know what the user is experiencing.",
							{
								"a": {
									"href": "https://github.com/WPO-Foundation/webpagetest/blob/master/docs/Metrics/TimeToInteractive.md#time-to-interactive-tti",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Time To Interaction"
								}
							},
							"First visual change is when something is first painted within the viewport of the browser screen. For Wikipedia on desktop this mostly means going from a complete blank screen to something like this:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/kclcvmoslc3qxfeinz4l/PHID-FILE-g2fz3dsyisn32eld6rmh/obama-desktop.jpg",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_38",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/kclcvmoslc3qxfeinz4l/PHID-FILE-g2fz3dsyisn32eld6rmh/obama-desktop.jpg",
											"width": "400"
										}
									}
								}
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/maniphest/task/edit/form/1/?projectPHIDs=Performance-Team",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "issue in Phabricator"
								}
							},
							"On mobile the first visual change looks something like this:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/5tqxopt7tvqtvweu7ptj/PHID-FILE-kx5wd3w72u4ol35kony7/obama-mobile.jpg",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_39",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/5tqxopt7tvqtvweu7ptj/PHID-FILE-kx5wd3w72u4ol35kony7/obama-mobile.jpg",
											"width": "400"
										}
									}
								}
							},
							"Showing content (text/images) early is important, since the earlier you can see the text as a reader, the sooner you can start to read and get the information you want.",
							"First visual change also correlates to the RUM metric first paint. We can see that the first visual change and first paint happen at almost the same time. That means that if we see a change in first paint in RUM, we will also see the change in first visual change in synthetic testing.",
							{
								"a": {
									"href": "https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Speed Index"
								}
							},
							"The idea with Speed Index is to measure when the entire content within the browser viewport is ready. Speed Index will be lower if the entire page renders more quickly, but it will also be lower if partial content renders sooner.  If two pages finish rendering at the same time, the page that started to render first will have the lowest Speed Index.",
							"We use Speed Index to know when when the page looks ready for the user. However the page can still download assets and run JavaScript, so it could be that the page looks ready but doesn’t feel ready (it’s not responsive if you to click on a link).",
							"Last visual change is when everything within the viewport is ready on the screen. It could be images coming in late or JavaScript in one extension changing the layout of the already painted screen.",
							"Here’s an example video. Look to the right of the screen and you will see the map, the sound player and that small coordinates image coming in really late.",
							{
								"div": {
									"class": "embedded-commons-video",
									"iframe": {
										"width": "650",
										"height": "400",
										"style": "margin: 1em auto; border: 0px;",
										"src": "https://commons.wikimedia.org/wiki/File:Sweden_article_on_enwiki_loaded_in_Chrome_using_Browsertime,_recorded_using_FFMpeg.webm?embedplayer=yes",
										"frameborder": "0"
									}
								}
							},
							"We don't act on last visual change today because it is really dependent on what page we test, what browser we use to test the page, and other factors. But it is an important metric: if the page starts to change when you want to interact with it, you will not know if the page is ready to use or not.",
							"We also collect metrics when the page is 85, 95 and 99% complete.  The intent of these metrics is to account for content-related factors that result in changes to overall page load times. For example, when Wikipedia is running fundraising campaigns, there is a donation banner that appears on most pages on the site.  These donation banners are intentionally loaded after most of the content has loaded, but they do result in the last visual change being pushed back quite a bit.  By measuring the time that it takes for the page to be 85% complete instead, we avoid the variation that this introduces.",
							"The last one of our visual metrics are the ability to measure when specific elements is painted on the screen. We can get metrics like when is the largest image painted? When is the logo? We have started to collect these metrics in our tools but haven't yet started to act on them.",
							"Another type of metric that we use in the lab is CPU time spent in the browser. Today we can only get that from Chrome. We configure and collect the event trace log from Chrome and categorise the events on a high level.",
							"We can then see time spent on painting, rendering, scripting and loading. If we get a regression, we can then go down to a lower event level and use that to better understand what is actually happening.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/zron5fgy275omwp7rif3/PHID-FILE-lzdljllmxdfsjinpfyec/jump-in-rendering.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_40",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/zron5fgy275omwp7rif3/PHID-FILE-lzdljllmxdfsjinpfyec/jump-in-rendering.png",
											"width": "400"
										}
									}
								}
							},
							"One important meta metric that we also collect is the standard deviation of each metric that we collect. That helps us know how stable the metrics we have are and if we need to tune anything in our setup. It also helps us understand if we have certain pages that are extra hard to measure (that have a lot of variation).  This is something that I’ll talk about more in my next post, when we discuss the ways that we control our synthetic testing environment.",
							"Our synthetic testing also helps us with knowing how our pages were constructed at a given time. We collect number of requests, the size of each response, the response type and how the browser downloaded all responses every time we measure a page. That helps us when we find a regression. We can compare the before and after (what did the page look like before the regression?).",
							"We also collect screenshots and videos of what the page looked like at the time we measured the page.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/2mawkp46awx3evqib4gg/PHID-FILE-gnzhbe4mtgh57tktztbn/waterfall.jpg",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_41",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/2mawkp46awx3evqib4gg/PHID-FILE-gnzhbe4mtgh57tktztbn/waterfall.jpg",
											"width": "400"
										}
									}
								}
							},
							"We focus on visual metrics and CPU time spent metrics in our synthetic testing. The visual metrics give us a better feel for what the user is experiencing than most of the metrics we collect from real users. Our synthetic testing also gives us a snapshot of what the page looked like at the moment we measured it. The problem with synthetic measuring is that we try out only a small portion of users’ different setups.",
							"In the next blog post I will talk about our technical setup, problems we have had, and strategies we are using to get stable metrics."
						],
						"h3": [
							{
								"class": "remarkup-header",
								"$t": "Performance metrics"
							},
							{
								"class": "remarkup-header",
								"$t": "Performance testing in a lab"
							},
							{
								"class": "remarkup-header",
								"$t": "Metrics in our lab"
							},
							{
								"class": "remarkup-header",
								"$t": "Summary"
							}
						],
						"ul": [
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "Today's browsers have limited ways of giving us metrics that tell us what the user is experiencing. A couple of browsers have a metric called First Paint (when something is first painted on the screen). But the rest of the metrics are more technical. They tell us how the browser is doing, not what the user is experiencing. Browser vendors are working on this but, at the moment, most performance APIs are focused on technical metrics. And we’re more interested in what our users are experiencing."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "Metrics from real users have a lot of variation because the users have different conditions: network latency, operating system, browser version, CPU and more. If something changes, how do we know the main reason? Is it our code? Is it something else?"
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "There is a lot of noise in the data we collect from real users. To catch a performance regression, it needs to be big enough and affect many users to be visible."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "Collecting metrics that are more related to user experience than the technical metrics the browsers provide. In this post we will focus on the specific metrics we get from the lab environment."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "In a controlled environment that typically provides consistent test results, it is easier to detect regressions. It’s easier to spot smaller regressions than with RUM."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "Lab testing and RUM are best friends: our synthetic testing improves our confidence in RUM and vice versa. If we see a regression in both types of measurements, we know for sure that it's a real regression."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "We can see changes very quickly when testing in a lab setting, because the only variable that is changing is the code. Being confident in RUM usually takes more time: you need to have more data to see the change."
								}
							},
							{
								"class": "remarkup-list",
								"li": {
									"class": "remarkup-list-item",
									"$t": "In a lab setting, we are also able to control when browser versions are updated to new versions, allowing us to detect when browser releases impact user experience. Our users’ browsers auto updates. A new browser version can affect the performance."
								}
							}
						],
						"h4": [
							{
								"class": "remarkup-header",
								"$t": "Visual metrics"
							},
							{
								"class": "remarkup-header",
								"$t": "CPU time spent metrics"
							},
							{
								"class": "remarkup-header",
								"$t": "Deviation"
							},
							{
								"class": "remarkup-header",
								"$t": "Page snapshots"
							}
						],
						"h5": [
							{
								"class": "remarkup-header",
								"$t": "First Visual Change"
							},
							{
								"class": "remarkup-header",
								"$t": "Speed Index"
							},
							{
								"class": "remarkup-header",
								"$t": "Last Visual Change"
							},
							{
								"class": "remarkup-header",
								"$t": "Visual Complete 85/95/99"
							},
							{
								"class": "remarkup-header",
								"$t": "Visual Elements"
							}
						],
						"blockquote": {
							"p": "“The Speed Index is the average time at which visible parts of the page are displayed. It is expressed in milliseconds and dependent on size of the viewport.”"
						}
					}
				}
			},
			{
				"title": "Mobile web performance: the importance of the device",
				"link": {
					"href": "/phame/live/7/post/109/mobile_web_performance_the_importance_of_the_device/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/109/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2018-06-22T14:19:10+00:00",
				"updated": "2018-11-05T23:16:35+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://en.wikipedia.org/wiki/User_agent#User_agent_identification",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "User Agent"
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/Analytics/Systems/EventLogging/Data_retention_and_auto-purging",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "As per our data retention guidelines, we only keep user agent information for 90 days"
									}
								]
							},
							{
								"a": [
									{
										"href": "https://en.wikipedia.org/wiki/Samsung_Galaxy_J2_(2017)",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Samsung Galaxy J2"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Samsung_Galaxy_J7_Prime",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Samsung Galaxy J7 Prime"
									}
								]
							},
							{
								"a": {
									"href": "https://en.wikipedia.org/wiki/Real_user_monitoring",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Real User Monitoring"
								}
							},
							{
								"tt": [
									{
										"class": "remarkup-monospaced",
										"$t": "J7 Prime"
									},
									{
										"class": "remarkup-monospaced",
										"$t": "J2"
									}
								]
							},
							{
								"a": [
									{
										"href": "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Network Information API"
									},
									{
										"href": "https://phabricator.wikimedia.org/T182361",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "recently added to the performance data we collect"
									}
								]
							},
							"Looking at Chrome Mobile only, for the sake of having a consistent definition of the effectiveType buckets, we get:",
							"These breakdowns are extremely similar, which strongly suggests that users of these two phone models in India actually experience the same internet connectivity quality. This is very interesting, because it gives us the ability to compare the performance of these two devices from different hardware generations, in the real world, with connectivity quality as a whole that looks almost identical. And similar latency, since they're connecting to our data centers from the same country.",
							{
								"a": {
									"href": "https://developer.mozilla.org/en-US/docs/Web/API/PerformancePaintTiming",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "firstPaint"
								}
							},
							{
								"a": {
									"href": "https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/loadEventEnd",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "loadEventEnd"
								}
							},
							{
								"tt": {
									"class": "remarkup-monospaced",
									"$t": "J2"
								}
							},
							"These results show that device generation has a huge impact on the real performance experienced by users. Across the globe, users are upgrading their devices over time. This phenomenon means that the performance metrics we measure directly on sampled users with RUM should improve over time, by virtue of people getting more powerful devices on average. This is an important factor to keep in mind when measuring the effect of our own performance optimizations. And when the median of the RUM metrics stay stable over a long period of time, it might be that our performance is actually worsening, and that degradation is being masked by device and network improvements across the board.",
							"Given the eye-opening results of this small study, getting a better grasp on the pace of improvement of the environment (device generations, network) looks like a necessity to understand and validate our impact on the evolution of RUM metrics."
						],
						"div": [
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"th": [
												"effectiveType",
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J2"
													}
												},
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J7 Prime"
													}
												}
											]
										},
										{
											"td": [
												"slow-2g",
												"0.5%",
												"1.1%"
											]
										},
										{
											"td": [
												"2g",
												"0.8%",
												"0.7%"
											]
										},
										{
											"td": [
												"3g",
												"27%",
												"28%"
											]
										},
										{
											"td": [
												"4g",
												"71.5%",
												"70.2%"
											]
										},
										{}
									]
								}
							},
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"th": [
												"Device",
												"Sample size",
												"Median",
												"p90",
												"p95",
												"p99"
											]
										},
										{
											"td": [
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J2"
													}
												},
												"1226",
												"1842",
												"4769",
												"7704",
												"15957"
											]
										},
										{
											"td": [
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J7 Prime"
													}
												},
												"1798",
												"1082",
												"2811",
												"5076",
												"12136"
											]
										},
										{
											"td": [
												"difference",
												{},
												"-41.3%",
												"-41.1%",
												"-34.2%",
												"-24%"
											]
										},
										{}
									]
								}
							},
							{
								"class": "remarkup-table-wrap",
								"table": {
									"class": "remarkup-table",
									"tr": [
										{
											"th": [
												"Device",
												"Sample size",
												"Median",
												"p90",
												"p95",
												"p99"
											]
										},
										{
											"td": [
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J2"
													}
												},
												"1226",
												"3078",
												"9813",
												"14072",
												"29240"
											]
										},
										{
											"td": [
												{
													"tt": {
														"class": "remarkup-monospaced",
														"$t": "J7 Prime"
													}
												},
												"1798",
												"1821",
												"5635",
												"9847",
												"28949"
											]
										},
										{
											"td": [
												"difference",
												{},
												"-40.9%",
												"-42.6%",
												"-30.1%",
												"-1.1%"
											]
										},
										{}
									]
								}
							}
						]
					}
				}
			},
			{
				"title": "Thumbor support for private wikis deployed",
				"link": {
					"href": "/phame/live/7/post/86/thumbor_support_for_private_wikis_deployed/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/86/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2018-02-22T10:34:43+00:00",
				"updated": "2018-02-22T16:36:28+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://wikitech.wikimedia.org/wiki/Thumbor",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Thumbor"
									},
									{
										"href": "https://meta.wikimedia.org/wiki/OTRS",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "OTRS"
									}
								],
								"em": "special case"
							},
							"When we migrated all public thumbnail traffic to using Thumbor as the rendering backend last June, it would have been easy to claim the job done and move onto something else, turning a blind eye to the special case of private wikis. But their different setup meant that they were still using the MediaWiki-based thumbnailing cluster. A clear waste of resources to have a whole (reduced, but still multi-machine) cluster dedicated to a special case representing so little traffic. And more importantly, it meant that for tasks like security work or software upgrades, we would have two clusters to care about for image processing, the new Thumbor one and the legacy MediaWiki image scaling. With very different testing involved for each.",
							"What makes thumbnailing different for private wikis, is that like any content on them, images are meant to be only viewed by people with access to those wikis. For public wikis, authentication isn't required, and that's what lets us have a more streamlined stack that doesn't hit MediaWiki. Public wiki thumbnails are highly cached in Varnish. For private wikis, MediaWiki's authentication acts as the gatekeeper to let a client view a thumbnail. Varnish doesn't cache the thumbnails of private wikis, and merely forwards the request to MediaWiki.",
							"With the new system deployed yesterday, when MediaWiki receives such requests for a new thumbnail on a private wiki, instead of rendering it like it used to, it proxies the request to the same Thumbor cluster used by public wikis, which takes care of the rendering. Some additional gatekeeping is in place in Thumbor to ensure that requests coming from the public wiki pipeline cannot access images that belong to private wikis. Essentially, rendering is now centralized on the single Thumbor cluster, which takes care of both worlds, while still keeping Thumbor decoupled from MediaWiki authentication (since for security reasons, we don't want Thumbor to interact with MediaWiki databases).",
							"Bar any unforeseen issues while we keep an eye on potential bugs in the coming months, we will most likely retire the MediaWiki-based image scaling cluster this year, therefore truly concluding the migration of all our thumbnail rendering across our entire infrastructure to Thumbor.",
							"Sometimes it takes a lot of extra work to tackle those special cases, which can feel like a chore after having switched 99.9% of the traffic already. But the cost of keeping a legacy system running for a special case cannot be overlooked. Beyond keeping a cluster of mostly idle machines in two data centers, the duplicated work of maintaining things is also expensive and never really quantified. Reaching true completion and decommissioning a legacy cluster feels great, though, it's really worth putting in the extra effort!"
						]
					}
				}
			},
			{
				"title": "Measuring Wikipedia page load times",
				"link": {
					"href": "/phame/live/7/post/83/measuring_wikipedia_page_load_times/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/83/",
				"author": {
					"name": "Krinkle (Timo Tijhof)"
				},
				"published": "2018-01-09T18:25:45+00:00",
				"updated": "2018-01-12T19:11:46+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							"This post shows how we measure and interpret load times on Wikipedia. It also explains what real-user metrics are, and how percentiles work.",
							"When a browser loads a page, the page can include program code (JavaScript). This program will run inside the browser, alongside the page. This makes it possible for a page to become dynamic (more than static text and images). When you search on Wikipedia.org, the suggestions that appear are made with JavaScript.",
							"Browsers allow JavaScript to access some internal systems. One such system is Navigation Timing, which tracks how long each step takes. For example:",
							"There are two ways to measure performance: Real user monitoring, and synthetic testing. Both play an important role in understanding performance, and in detecting changes.",
							"Synthetic testing can give high confidence in change detection. To detect changes, we use an automated mechanism to continually load a page and extract a result (eg. load time). When there is a difference between results, it likely means that our website changed. This assumes other factors remained constant in the test environment. Factors such as network latency, operating system, browser version, and so on.",
							"This is good for understanding relative change. But synthetic testing does not measure the performance as perceived by users. For that, we need to collect measurements from the user’s browser.",
							"Our JavaScript code reads the measurements from Navigation Timing, and sends them back to Wikipedia.org. This is real-user monitoring.",
							"Imagine 9 users each send a request: 5 users get a result in 5ms, 3 users get a result in 70ms, and for one user the result took 560ms. The average is 88ms. But, the average does not match anyone’s real experience. Let’s explore percentiles!",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/siw3g2fygkjxysmeu4gv/PHID-FILE-icv5lj6kc2pldcbl23hz/figure-1-percentiles.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_42",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/siw3g2fygkjxysmeu4gv/PHID-FILE-icv5lj6kc2pldcbl23hz/figure-1-percentiles.png",
											"height": "100",
											"alt": "Diagram showing 9 labels: 5ms, 5ms, 5ms, 5ms, 5ms, 70ms, 70ms, 70ms, and 560ms."
										}
									}
								}
							},
							{
								"em": [
									"50th percentile",
									"75th percentile"
								]
							},
							"When working on a service used by millions, we focus on the 99th percentile and the highest value (100th percentile). Using medians, or percentiles lower than 99%, would exclude many users. A problem with 1% of requests is a serious problem. To understand why, it is important to understand that, 1% of requests does not mean 1% of page views, or even 1% of users.",
							"A typical Wikipedia pageview makes 20 requests to the server (1 document, 3 stylesheets, 4 scripts, 12 images). A typical user views 3 pages during their session (on average).",
							{
								"tt": [
									{
										"class": "remarkup-monospaced",
										"$t": "20 requests x 1% = 20% = ⅕"
									},
									{
										"class": "remarkup-monospaced",
										"$t": "3 pages x 20 objects x 1% = 60% ≈ ⅔"
									}
								]
							},
							{
								"em": [
									"back-end",
									"back-end",
									"front-end"
								]
							},
							"It takes time for the request to travel from the user’s device to our systems (through cellular or WiFi radio waves, and through wires.) It also takes time for our response to travel back over similar networks to the user’s device. Once there, it takes even more time for the device’s operating system and browser to process and display the information. Measuring this is part of front-end performance.",
							"Differences in back-end performance may affect all users. But, differences in front-end performance are influenced by factors we don’t control. Such as network quality, device hardware capability, browser, browser version, and more.",
							"Even when we make no changes, the front-end measurements do change. Possible causes:",
							"The most likely cause for a sudden change in metrics is ourselves. Given our scale, the above factors usually change only for a small number of users at once. Or the change might happen slowly.",
							"Yet, sometimes these external factors do cause a sudden change in metrics.",
							"Shortly after Apple released iOS 9 (in 2015), our global measurements were higher than before. We found this was due to Mobile Safari 9 introducing support for Navigation Timing.",
							"Before this event, our metrics only represented mobile users on Android. With iOS 9, our data increased its scope to include Mobile Safari.",
							"iOS 9, or the networks of iOS 9 users, were not significantly faster or slower than Android’s. The iOS upgrade affected our metrics because we now include an extra 15% of users – those on Mobile Safari.",
							"Where desktop latency is around 330ms; mobile latency is around 520ms. Having more metrics from mobile, skewed the global metrics toward that category.",
							"The above graphs plot the \"75th percentile\" of responseStart for desktop and mobile (from November 2015). We combine these metrics into one data point for each minute. The above graphs show data for one month. There is only enough space on the screen to have each point represent 3 hours. This works by taking the mean average of the per-minute values within each 3 hour block. While this provides a rough impression, this graph does not show the 75th percentile for November 2015. The next section explains why.",
							"Opinions vary on how bad it is to take the average of percentiles over time. But one thing is clear: The average of many 1-minute percentiles is not the percentile for those minutes. Every minute is different, and the number of values also varies each minute. To get the percentile for one hour, we need all values from that hour, not the percentile summary from each minute.",
							"Below is an example with values from three minutes of time. Each value is the response time for one request. Within each minute, the values sort from low to high.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/porgzz4pytpmrn3xexh6/PHID-FILE-2miv6vsothoyeluj4qg6/figure-2.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_45",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/porgzz4pytpmrn3xexh6/PHID-FILE-2miv6vsothoyeluj4qg6/figure-2.png",
											"height": "512",
											"alt": "Diagram with four sections. Section One is for the minute 08:00 to 08:01, it has nine values with the middle value of 5ms marked as the median. Section Two is for 08:01 to 08:02 and contains five values, the median is 560ms. Section Three is 08:02 to 08:03, contains five values, the median of Section Three is 70ms. The last section, Section Four, is the combined diagram from 08:00 to 08:03 showing all nineteen values. The median is 70ms."
										}
									}
								}
							},
							{
								"tt": {
									"class": "remarkup-monospaced",
									"$t": "(5 + 560 + 70) / 3"
								}
							},
							"To compute the percentile over a large period, we must have all original values. But, it’s not efficient to store data about every visit to Wikipedia for a long time. We could not quickly compute percentiles either.",
							{
								"em": "histogram bin"
							},
							"Let’s process the same example values as before, but this time using buckets.",
							{
								"div": [
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/4iofmmgk2rmufsk4fwfk/PHID-FILE-5qjog7zsjygzk7csj3tk/figure-3-buckets.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_46",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/4iofmmgk2rmufsk4fwfk/PHID-FILE-5qjog7zsjygzk7csj3tk/figure-3-buckets.png",
												"height": "463",
												"alt": "There are four buckets. Bucket A is for values below 11ms. Bucket B is for 11ms to 100ms. Bucket C is for 101ms to 1000ms. And Bucket D is for values above 1000ms. For each of the 19 values, we find the associated bucket and increase its counter."
											}
										}
									},
									{
										"class": "phabricator-remarkup-embed-layout-center",
										"a": {
											"href": "https://phab.wmfusercontent.org/file/data/czeyvgnensjxvwgrj5pq/PHID-FILE-pz4dhhb6wn67qqb67jsa/figure-4-buckets-summary.png",
											"class": "phabricator-remarkup-embed-image",
											"data-sigil": "lightboxable",
											"data-meta": "0_47",
											"img": {
												"src": "https://phab.wmfusercontent.org/file/data/czeyvgnensjxvwgrj5pq/PHID-FILE-pz4dhhb6wn67qqb67jsa/figure-4-buckets-summary.png",
												"height": "90",
												"alt": "After processing all values, the counters are as follows. Bucket A holds 9, Bucket B holds 4, Bucket C holds 6, and Bucket D holds 0."
											}
										}
									}
								],
								"br": {}
							},
							"Based on the total count (19) we know that the median (10th value) must be in bucket B, because bucket B contains values 10 to 13. And that the 75th percentile (15th value) must be in bucket C because it contains values 14 to 19.",
							"We cannot know the exact millisecond value of the median, but we know the median must be between 11ms and 100ms. (This matches our previous calculation, which produced 70ms.)",
							"When we use exact percentiles, our goal was for that percentile to be a certain number. For example, if our 75th percentile today is 560ms, this means for 75% of users a response takes 560ms or less. Our goal could be to reduce the 75th percentile to below 500ms.",
							"When using buckets, goals are defined differently. In our example, 6 out of 19 responses (32%) are above 100ms (bucket C and D), and 13 of 19 (68%) are below 100ms (bucket A and B). Our goal could be to reduce the percentage of responses above 100ms. Or the opposite, to increase the percentage of responses within 100ms.",
							"Traffic trends are generally moving towards mobile. In fact, April 2017 was the first month where Wikimedia mobile pageviews reached 50% of all Wikimedia pageviews. And after June 2017, mobile traffic has stayed above 50%.",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-center",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/2tpgogf2g34qggfx6rag/PHID-FILE-7scdbt4qdznn4noohg5q/blog-image-platform-percent.png",
										"class": "phabricator-remarkup-embed-image",
										"data-sigil": "lightboxable",
										"data-meta": "0_48",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/2tpgogf2g34qggfx6rag/PHID-FILE-7scdbt4qdznn4noohg5q/blog-image-platform-percent.png",
											"height": "159",
											"alt": "Bar chart showing percentages of mobile and desktop pageviews for each month in 2017. They mostly swing equal at around 50%. Looking closely, we see mobile first reaches 51% in April. In May it was below 50% again. But for June and every month since then mobile has remained above 50%. The peak was in October 2017, where mobile accounted for 59% of pageviews. The last month in the graph, November 2017 shows 53% of mobile pageviews."
										}
									}
								}
							},
							"Global changes like this have a big impact on our measurements. This is the kind of change that drives us to rethink how we measure performance, and (more importantly) what we monitor.",
							"In the next post we’ll discuss how we aggregate this data, and which metrics we monitor on our dashboards."
						],
						"h3": [
							{
								"class": "remarkup-header",
								"$t": "Navigation Timing"
							},
							{
								"class": "remarkup-header",
								"$t": "Where to measure: Real-user and synthetic"
							},
							{
								"class": "remarkup-header",
								"$t": "How to measure: Percentiles"
							},
							{
								"class": "remarkup-header",
								"$t": "Real-user variables"
							},
							{
								"class": "remarkup-header",
								"$t": "Case in point: Mobile Safari 9"
							},
							{
								"class": "remarkup-header",
								"$t": "Average of percentiles"
							},
							{
								"class": "remarkup-header",
								"$t": "Buckets"
							},
							{
								"class": "remarkup-header",
								"$t": "Rise of mobile"
							},
							{
								"class": "remarkup-header",
								"$t": "Further reading"
							}
						],
						"ul": [
							{
								"class": "remarkup-list",
								"li": [
									{
										"class": "remarkup-list-item",
										"$t": "How long to establish a connection to the server?"
									},
									{
										"class": "remarkup-list-item",
										"$t": "When did the response from the server start arriving?"
									},
									{
										"class": "remarkup-list-item",
										"$t": "When did the browser finish loading the page?"
									}
								]
							},
							{
								"class": "remarkup-list",
								"li": [
									{
										"class": "remarkup-list-item",
										"strong": "Network"
									},
									{
										"class": "remarkup-list-item",
										"strong": "Device"
									},
									{
										"class": "remarkup-list-item",
										"strong": "Content change"
									},
									{
										"class": "remarkup-list-item",
										"strong": "Content choice"
									},
									{
										"class": "remarkup-list-item",
										"strong": "Device choice"
									}
								]
							},
							{
								"class": "remarkup-list",
								"li": [
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://www.mediawiki.org/wiki/Wikimedia_Performance_Team",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "Wikimedia Performance Team"
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://www.w3.org/TR/navigation-timing-2/",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "Navigation Timing Level 2"
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://www.infoq.com/presentations/latency-response-time",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "\"How Not To Measure Latency\""
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://howdns.works/",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "How DNS Works"
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://en.wikipedia.org/wiki/Domain_Name_System",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "\"Domain Name System (DNS)\""
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://en.wikipedia.org/wiki/Transmission_Control_Protocol",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "\"Transmission Control Protocol (TCP)\""
										}
									},
									{
										"class": "remarkup-list-item",
										"a": {
											"href": "https://en.wikipedia.org/wiki/HTTPS",
											"class": "remarkup-link",
											"rel": "noreferrer",
											"$t": "\"HTTPS\""
										}
									}
								]
							}
						],
						"div": {
							"class": "remarkup-table-wrap",
							"table": {
								"class": "remarkup-table",
								"tr": [
									{
										"td": [
											{
												"div": {
													"class": "phabricator-remarkup-embed-layout-left",
													"a": {
														"href": "https://phab.wmfusercontent.org/file/data/oilmhyhrdbtjqehaze2q/PHID-FILE-3lxaj6g7pshsh2yvd4ug/blog-image-01.png",
														"class": "phabricator-remarkup-embed-image",
														"data-sigil": "lightboxable",
														"data-meta": "0_43",
														"img": {
															"src": "https://phab.wmfusercontent.org/file/data/oilmhyhrdbtjqehaze2q/PHID-FILE-3lxaj6g7pshsh2yvd4ug/blog-image-01.png",
															"height": "154",
															"alt": "Line graph for responseStart metric from desktop pageviews. Values range from 250ms to 450ms. Averaging around 330ms."
														}
													}
												}
											},
											{
												"div": {
													"class": "phabricator-remarkup-embed-layout-left",
													"a": {
														"href": "https://phab.wmfusercontent.org/file/data/cimqlkthg53uq4c7e7yw/PHID-FILE-qv67annefhzfalj46cn5/blog-image-02.png",
														"class": "phabricator-remarkup-embed-image",
														"data-sigil": "lightboxable",
														"data-meta": "0_44",
														"img": {
															"src": "https://phab.wmfusercontent.org/file/data/cimqlkthg53uq4c7e7yw/PHID-FILE-qv67annefhzfalj46cn5/blog-image-02.png",
															"height": "156",
															"alt": "Line graph for responseStart metric from mobile pageviews. Values range from 350ms to 700ms. Averaging around 520ms."
														}
													}
												}
											}
										]
									},
									{}
								]
							}
						}
					}
				}
			},
			{
				"title": "The journey to Thumbor, part 3: development and deployment strategy",
				"link": {
					"href": "/phame/live/7/post/81/the_journey_to_thumbor_part_3_development_and_deployment_strategy/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/81/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-11-20T12:42:50+00:00",
				"updated": "2017-12-23T02:13:07+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/phame/post/view/80/the_journey_to_thumbor_part_2_thumbnailing_architecture/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "where Thumbor fits in our media thumbnailing stack"
								}
							},
							{
								"a": [
									{
										"href": "https://www.mediawiki.org/wiki/MediaWiki-Vagrant",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "MediaWiki Vagrant"
									},
									{
										"href": "https://phabricator.wikimedia.org/p/bd808/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_50",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@bd808"
										}
									}
								]
							},
							"This phase actually represented the bulk of the work, reproducing support for all the media formats and special parameters found in Mediawiki thumbnailing. I dedicated a lot of attention to making sure that the images generated by Thumbor were as good as what MediaWiki was outputting for the same original media. In order to do that, I wrote many integration tests using thumbnails from Wikimedia production, which were used as reference output. Those tests are still part of the Thumbor plugins Debian package and ensure that we avoid regressions. They use a DSSIM algorithm to visually compare images and make sure that what Thumbor outputs doesn't visually diverge from the  reference thumbnails. We also compare file size to make sure that the new output isn't significantly heavier than the old.",
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/p/fgiunchedi/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_49",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@fgiunchedi"
										}
									},
									{
										"href": "https://ftp-master.debian.org/new/thumbor_6.3.2-1.html",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Thumbor submitted to Debian unstable"
									}
								]
							},
							"One advantage of doing this is that it makes deployment of updates really straightforward, with the integration test suite I mentioned earlier running in isolation when the Debian package is built. With those Debian packages done, we were ready to run this on production machines.",
							"But the more important advantage is that by having those Debian packages into Debian itself, other people are using the exact same versions of Thumbor's dependencies and Thumbor itself via Debian, thus greatly expanding the exposure of the software we run in production. This increases the likelihood that security issues we might be exposed to are found and fixed.",
							{
								"a": {
									"href": "https://www.mediawiki.org/wiki/Beta_Cluster",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "the Beta cluster"
								}
							},
							"Just like packaging, this new step revealed bugs in the Thumbor plugins Python code that we were able to fix before hitting production.",
							"The Beta wikis only have a small selection of media, and as such we still hadn't been exposed to the variety of content found on production wikis. I was worried that we would run into media files that had special properties in production that we hadn't run into in all the development phase. Which is why I came up with a plan to dual-serve all production requests to the new production Thumbor machines and compare output.",
							"This consisted in modifications to the production Swift proxy plugin code we have in place to rewrite Wikimedia URLs. Instead of sending thumbnail requests to just MediaWiki, I modified it to also send the same requests to Thumbor. At first completely blindly, the Swift proxy would send requests to Thumbor and not even wait to see the outcome.",
							"Then I looked at the Thumbor error logs and found several files that were problematic for Thumbor and not for MediaWiki. This allowed us to fix many bugs that we would have normally found out about during the actual launch. This was also the opportunity to reproduce and iron out the various throttling mechanisms.",
							"To be more thorough, I mage the Swift proxy log HTTP status codes returned by MediaWiki and Thumbor and produced a diff, looking for files that were problematic for one and not the other. This allowed us to find more bugs on the Thumbor side, and a few instances of files that Thumbor could render properly that MediaWiki couldn't!",
							"This is also the phase where under the full production load, our Thumbor configuration started showing significant issues around memory consumption and leaks. We were able to fix all those problems in that fire-and-forget dual serving setup, with no impact at all on production traffic. This was an extremely valuable strategy, as we were able to iterate quickly in the same traffic conditions as if the service had actually launched, without any consequences for users.",
							"With Thumbor running smoothly on production machines,  successfully rendering a superset of thumbnails MediaWiki was able to, it was time to launch. The dual-serving logic in the Swift proxy came in very handy: it became a simple toggle between sending thumbnailing traffic to MediaWiki and sending it to Thumbor. And so we did switch. We did that gradually, having more and more wikis's thumbnails rendered by Thumbor over the course of a couple of weeks. The load was handled fine (predictable, since we were handling the same load in the dual-serving mode). The success rate of requests based on HTTP status codes was the same before and after.",
							"However after some time we started getting reports of issues around EXIF orientation. A feature we had integration tests for. But the tests only covered 180 degrees rotation and not 90 degrees (doh!). The Swift proxy switch allowed us to quickly switch traffic back to MediaWiki. We did so because it's quite a prevalent feature in JPGs. We fixed that one large bug, switched the traffic back to Thumbor and that was it.",
							"Some minor bugs surfaced later regarding much less common files with special properties, that we were able to fix very quickly. And deploy fixes for safely and easily with the Debian package. But we could have avoided all of those bugs too if we had been more thorough in the dual-serving phase. We were only comparing HTTP status codes between MediaWiki and Thumbor. However, rendering a thumbnail successfully doesn't mean that the visual contents are right! The JPG orientation could be wrong, for example. If I had to do it again, I would have run DSSIM visual comparisons on the live dual-served production traffic between the MediaWiki and Thumbor outputs. That would have definitely surfaced the handful of bugs that appeared post-launch.",
							"All in all, if you do your homework and are very thorough in testing locally and on production traffic, you can achieve a very smooth launch replacing a core part of infrastructure with completely different software. Despite the handful of avoidable bugs that appeared around the launch, the switch to Thumbor went largely unnoticed by users, which was the original intent, as we were looking for feature parity and ease of swapping the new solution in. Thumbor has been happily serving all Wikimedia production thumbnail traffic since June 2017 in a very stable fashion. This concludes our journey to Thumbor :)"
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Development"
							},
							{
								"class": "remarkup-header",
								"$t": "Packaging"
							},
							{
								"class": "remarkup-header",
								"$t": "Beta"
							},
							{
								"class": "remarkup-header",
								"$t": "Pre-production"
							},
							{
								"class": "remarkup-header",
								"$t": "Production"
							},
							{
								"class": "remarkup-header",
								"$t": "Conclusion"
							}
						]
					}
				}
			},
			{
				"title": "The journey to Thumbor, part 2: thumbnailing architecture",
				"link": {
					"href": "/phame/live/7/post/80/the_journey_to_thumbor_part_2_thumbnailing_architecture/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/80/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-11-17T15:17:26+00:00",
				"updated": "2017-12-13T16:14:29+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": {
									"href": "https://wikitech.wikimedia.org/wiki/Thumbor",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Thumbor"
								}
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/phame/post/view/55/the_journey_to_thumbor_part_1_rationale/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "a previous blog post"
								}
							},
							"Like everything we serve to readers, thumbnails are heavily cached. Unlike wiki pages, there is no distinction in caching of thumbnails between readers and editors, in fact. Our edge is Nginx providing SSL termination, behind which we find Varnish clusters (both frontends and backend), which talk to OpenStack Swift - responsible for storing media originals as well as thumbnails - and finally Swift talks to Thumbor (previously MediaWiki).",
							"Nginx concerns itself with SSL and HTTP/2, because Varnish as a project decided to draw a line about Varnish's concerns and exclude HTTP/2 support from it.",
							{
								"a": {
									"href": "https://wikitech.wikimedia.org/wiki/Varnish",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Varnish"
								}
							},
							{
								"a": {
									"href": "https://wikitech.wikimedia.org/wiki/Swift",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Swift"
								}
							},
							"Thumbor concerns itself with generating thumbnails from original media. When it receives a request from Swift, it requests the corresponding original media from Swift, generates the required thumbnail from that original and returns it. This response is sent back up the call chain, all the way to the client, through Swift and Varnish. After that response is sent, Thumbor saves that thumbnail in Swift. Varnish, as it sees the response go through, keeps a copy as well.",
							{
								"a": [
									{
										"href": "https://www.ffmpeg.org/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Ffmpeg's"
									},
									{
										"href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "range requests"
									}
								]
							},
							"We wanted a thumbnailing service that was \"dumb\", i.e. didn't concern itself with more than thumbnailing. Thumbor definitely provided that, but was too simple for our existing needs, which is why we had to write a number of plugins for it, to add the following features:",
							"We also changed the images included in the Thumbor project to be respectful of open licenses and wrote Debian packages for all of Thumbor's dependencies and Thumbor itself.",
							"While Thumbor was a good match on the separation of concerns we were looking for, it still required writing many plugins and a lot of extra work to make it a drop-in replacement for MediaWiki's media thumbnailing code. The main reason being that Wikimedia sites support types of media files that the web at large cares less about, like giant TIFFs and PDFs.",
							"In the next blog post, I'll describe the development strategy that led to the successful deployment of Thumbor in production."
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "The stack"
							},
							{
								"class": "remarkup-header",
								"$t": "The request lifecycle"
							},
							{
								"class": "remarkup-header",
								"$t": "What's out of scope"
							},
							{
								"class": "remarkup-header",
								"$t": "What we needed to add"
							},
							{
								"class": "remarkup-header",
								"$t": "Conclusion"
							}
						],
						"ul": {
							"class": "remarkup-list",
							"li": [
								{
									"class": "remarkup-list-item",
									"$t": "New media formats (XCF, DJVU, PDF, WEBM, etc.)"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Smarter handling of giant originals (>1GB) to save memory"
								},
								{
									"class": "remarkup-list-item",
									"$t": "The ability to run multiple format engines at once"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Support for multipage media"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Handling the Wikimedia thumbnail URL format"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Loading originals from Swift"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Loading videos efficiently with range requests"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Saving thumbnails in Swift"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Various forms of throttling"
								},
								{
									"class": "remarkup-list-item",
									"a": {
										"href": "https://github.com/ionelmc/python-manhole",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Manhole"
									}
								},
								{
									"class": "remarkup-list-item",
									"$t": "Sending logs to ELK"
								},
								{
									"class": "remarkup-list-item",
									"$t": "Wikimedia-specific filters/settings, such as conditional sharpening of JPGs"
								}
							]
						}
					}
				}
			},
			{
				"title": "The journey to Thumbor, part 1: rationale",
				"link": {
					"href": "/phame/live/7/post/55/the_journey_to_thumbor_part_1_rationale/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/55/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-06-20T15:33:17+00:00",
				"updated": "2017-12-13T16:14:49+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": {
									"href": "https://github.com/thumbor/thumbor",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Thumbor"
								}
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/T121388",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "a year and a half ago"
								}
							},
							"The biggest reason to change the status quo is security. Since MediaWiki is quite monolithic, deployments of MediaWiki on our server fleet responsible for generating thumbnails aren't as isolated as they could be from the rest of our infrastructure.",
							{
								"a": [
									{
										"href": "https://www.cvedetails.com/vulnerability-list/vendor_id-7294/Libpng.html",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "a frequent security breach vector"
									},
									{
										"href": "https://github.com/netblue30/firejail",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "firejail"
									}
								]
							},
							"One possibility would have been to rewrite the MediaWiki code responsible for thumbnailing, turning it into a series of PHP libraries, that could then be run without MediaWiki, to perform the thumbnailing work we are currently doing - while untangling the code enough that the thumbnailing servers can be more isolated.",
							"However such a rewrite would be very expensive and when we can afford to, we prefer to use ready-made open source solutions with a community of their own, rather than writing new tools. It seemed to us that media thumbnailing was far from being a MediaWiki-specific problem and there ought to be open source solutions tackling that issue. We undertook a review of the open source landscape for this problem domain and Thumbor emerged as the clear leader in that area.",
							"The MediaWiki code responsible for thumbnailing currently doesn't have any team ownership at the Wikimedia Foundation.  It's maintained by volunteers (including some WMF staff acting in a volunteer capacity). However, the amount of contributors is very low and technical debt is accumulating.",
							{
								"a": [
									{
										"href": "https://github.com/thumbor/thumbor/graphs/contributors",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "a very active open-source project with many contributors"
									},
									{
										"href": "https://en.wikipedia.org/wiki/Grupo_Globo",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Globo"
									}
								]
							},
							{
								"a": {
									"href": "https://github.com/thumbor/thumbor/commits?author=gi11es",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "a number of upstream changes"
								}
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/diffusion/THMBREXT/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Wikimedia-specific Thumbor plugins"
								}
							},
							"For operational purposes, running parts of the wiki workflow as isolated services is always beneficial. It enables us to set up the best fencing possible for security purposes, where Thumbor only has access to what it needs. This limits the amount of damage possible in case of a security vulnerability propagated through media files.",
							"From monitoring, to resource usage control and upstream security updates, running our media thumbnailing as a service has significant operational upsides.",
							{
								"a": [
									{
										"href": "http://thumbor.readthedocs.io/en/latest/detection_algorithms.html#facial-detection",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "feature detection"
									},
									{
										"href": "http://thumbor.readthedocs.io/en/latest/filters.html",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "filters"
									}
								]
							},
							"At this time, however, we're only aiming to deploy Thumbor to Wikimedia production as a drop-in replacement for MediaWiki thumbnailing, targeting feature parity with the status quo.",
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/diffusion/THMBREXT/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Wikimedia-specific code footprint is small"
								}
							},
							{
								"a": [
									{
										"href": "https://en.wikipedia.org/wiki/WebP",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "WebP"
									},
									{
										"href": "http://thumbor.readthedocs.io/en/latest/format.html?highlight=webp",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "built-in feature of Thumbor"
									}
								]
							},
							"Those many factors contributed to us betting on Thumbor. Soon it will be put to the test of Wikimedia production where not only the scale of our traffic but also the huge diversity of media files we host make thumbnailing a challenge.",
							"In the next blog post, I'll describe the architecture of our production thumbnailing pipeline in detail and where Thumbor fits into it."
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Security"
							},
							{
								"class": "remarkup-header",
								"$t": "Maintenance"
							},
							{
								"class": "remarkup-header",
								"$t": "Service-oriented architecture"
							},
							{
								"class": "remarkup-header",
								"$t": "New features"
							},
							{
								"class": "remarkup-header",
								"$t": "Performance"
							},
							{
								"class": "remarkup-header",
								"$t": "Conclusion"
							}
						]
					}
				}
			},
			{
				"title": "Looking back: improvements to edit save time",
				"link": {
					"href": "/phame/live/7/post/54/looking_back_improvements_to_edit_save_time/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/54/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-06-12T09:32:27+00:00",
				"updated": "2017-06-14T01:56:51+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://meta.wikimedia.org/wiki/Wikimedia_Foundation_Annual_Plan/2016-2017/Final",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "annual plan"
									},
									{
										"href": "https://meta.wikimedia.org/wiki/Wikimedia_Foundation_Annual_Plan/2016-2017/Final#Program_4:_Improve_site_performance",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "goals this past year"
									}
								]
							},
							{
								"a": {
									"href": "https://grafana.wikimedia.org/dashboard/db/save-timing",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "publicly tracked on Grafana"
								}
							},
							"We distinguish the amount of time the backend takes to process the edit, from the amount of time the end-user actually experiences to save the edit (collected client-side). We'll focus on the latter, as this is what people really experience. Backend traffic can come from bots, jobs, etc. where long execution times atypical of human edits affect the metrics.",
							"Let's look at the evolution of frontend save timing since the beginning of the financial year, on July 1st 2016.",
							"The 99th percentile, which represents the slowest editors experience dropped significantly:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/xcsqjnaiujgegagkowna/PHID-FILE-7p54mtjy4bmf5vid2cfv/Capture_d_e%CC%81cran_2017-06-08_11.13.49.png",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_51",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/xcsqjnaiujgegagkowna/PHID-FILE-7p54mtjy4bmf5vid2cfv/Capture_d_e%CC%81cran_2017-06-08_11.13.49.png",
											"height": "573",
											"width": "1135"
										}
									}
								}
							},
							{
								"strong": "25% improvement"
							},
							"So did the median:",
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/ihjmbhik5oddayd2rliy/PHID-FILE-c5d2yobmaymeebks2osu/Capture_d_e%CC%81cran_2017-06-08_11.13.38.png",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_52",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/ihjmbhik5oddayd2rliy/PHID-FILE-c5d2yobmaymeebks2osu/Capture_d_e%CC%81cran_2017-06-08_11.13.38.png",
											"height": "576",
											"width": "1132"
										}
									}
								}
							},
							{
								"strong": "15% improvement"
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/p/aaron/",
									"class": "phui-tag-view phui-tag-type-person ",
									"data-sigil": "hovercard",
									"data-meta": "0_53",
									"span": {
										"class": "phui-tag-core phui-tag-color-person",
										"$t": "@aaron"
									}
								}
							}
						]
					}
				}
			},
			{
				"title": "Improving time-to-logo performance with preload links",
				"link": {
					"href": "/phame/live/7/post/19/improving_time-to-logo_performance_with_preload_links/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/19/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-06-07T07:38:43+00:00",
				"updated": "2017-06-08T11:07:20+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							"One of the goals of the  Wikimedia Performance Team is to improve the performance of MediaWiki and the broader software stack used on Wikimedia wikis. In this article we’ll describe a small performance improvement we’ve implemented for MediaWiki and recently deployed to production for Wikimedia. It highlights some of the unique problems we encounter on Wikimedia sites and how new web standards can be leveraged to improve performance.",
							{
								"a": [
									{
										"href": "https://www.mediawiki.org/wiki/Manual:$wgLogo",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "MediaWiki logo"
									},
									{
										"href": "https://developer.mozilla.org/en/docs/Web/CSS/background-image?v=control",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "CSS background image"
									}
								]
							},
							"In the loading sequence of a web page, browsers will give a relatively low priority to CSS background images. In practice, assuming an empty browser cache, this means that the MediaWiki logo loads quite late, after most images that are part of the page content have been loaded. To the viewer, this results in the page loading somewhat out of order: images that aren’t necessarily in view are loaded first, and the logo is one of the last images to be loaded. This breaks the de facto expectation that a web page’s content loads from top to bottom.",
							"This phenomenon extends the average duration of an imaginary metric one could call time-to-logo. The point in time when the logo appears is an important mental milestone, as it’s when a visitor has visual confirmation that they’ve landed on the right website. The issue of time-to-logo being high due to the CSS background limitation is felt even more on slow internet connections, where the logo can take seconds to appear - long after the page’s text and other images lower than the logo on the page have been loaded.",
							{
								"a": [
									{
										"href": "https://w3c.github.io/preload/",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "preload link keyword"
									},
									{
										"href": "https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "CSS media queries"
									}
								]
							},
							{
								"a": {
									"href": "https://www.w3.org/wiki/LinkHeader",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "<link> tags can be passed as response headers"
								}
							},
							{
								"a": {
									"href": "https://www.sitespeed.io/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Sitespeed.io"
								}
							},
							{
								"div": {
									"class": "embedded-commons-video",
									"iframe": {
										"width": "650",
										"height": "400",
										"style": "margin: 1em auto; border: 0px;",
										"src": "https://commons.wikimedia.org/wiki/File:Barack_Obama_article_on_enwiki_before_and_after_logo_loading_priority_change.webm?embedplayer=yes",
										"frameborder": "0"
									}
								}
							},
							{
								"a": {
									"href": "https://docs.google.com/document/d/1BR94tJdZLsin5poeet0XoTW60M0SjvOJQttKT-JK8HI/view",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "First Meaningful Paint"
								}
							},
							"In our case, the difference seen in synthetic testing is dramatic enough that have a high level of confidence that it has made the user experience better in the real world for many people.",
							{
								"a": {
									"href": "http://caniuse.com/#feat=link-rel-preload",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "isn’t supported by all major web browsers yet"
								}
							}
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Logo as CSS background"
							},
							{
								"class": "remarkup-header",
								"$t": "The preload link"
							},
							{
								"class": "remarkup-header",
								"$t": "Measuring the impact"
							}
						],
						"div": {
							"class": "remarkup-code-block",
							"data-code-lang": "text",
							"data-sigil": "remarkup-code-block",
							"pre": {
								"class": "remarkup-code",
								"$t": "Link: </static/images/project-logos/enwiki.png>;rel=preload;as=image;media=not all and (min-resolution:1.5dppx),</static/images/project-logos/enwiki-1.5x.png>;rel=preload;as=image;media=(min-resolution:1.5dppx) and (max-resolution:1.999999dppx),</static/images/project-logos/enwiki-2x.png>;rel=preload;as=image;media=(min-resolution:2dppx)"
							}
						}
					}
				}
			},
			{
				"title": "Investigating a performance improvement",
				"link": {
					"href": "/phame/live/7/post/15/investigating_a_performance_improvement/"
				},
				"id": "https://phabricator.wikimedia.org/phame/post/view/15/",
				"author": {
					"name": "Gilles (Gilles Dubuc)"
				},
				"published": "2017-06-02T10:02:37+00:00",
				"updated": "2017-06-05T08:57:58+00:00",
				"content": {
					"type": "xhtml",
					"div": {
						"xmlns": "http://www.w3.org/1999/xhtml",
						"p": [
							{
								"a": [
									{
										"href": "https://phabricator.wikimedia.org/p/Jdlrobson/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_66",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@Jdlrobson"
										}
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/WebPageTest",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "WebPageTest"
									},
									{
										"href": "https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "SpeedIndex"
									}
								]
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/25msxmscf7gy3exjf7ef/PHID-FILE-ivbh5b67gslggechbyip/Capture_d_e%CC%81cran_2017-05-26_11.37.35.png",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_54",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/25msxmscf7gy3exjf7ef/PHID-FILE-ivbh5b67gslggechbyip/Capture_d_e%CC%81cran_2017-05-26_11.37.35.png",
											"height": "463",
											"width": "1132"
										}
									}
								}
							},
							{
								"a": [
									{
										"href": "https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "SpeedIndex"
									},
									{
										"href": "https://twitter.com/patmeenan",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "Pat Meenan"
									},
									{
										"href": "https://wikitech.wikimedia.org/wiki/WebPageTest",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "WebPageTest"
									}
								]
							},
							{
								"a": {
									"href": "https://phabricator.wikimedia.org/p/Jdlrobson/",
									"class": "phui-tag-view phui-tag-type-person ",
									"data-sigil": "hovercard",
									"data-meta": "0_65",
									"span": {
										"class": "phui-tag-core phui-tag-color-person",
										"$t": "@Jdlrobson"
									}
								}
							},
							{
								"a": [
									{
										"href": "/tag/performance-team/",
										"class": "phui-tag-view phui-tag-type-shade phui-tag-violet phui-tag-shade phui-tag-icon-view ",
										"data-sigil": "hovercard",
										"data-meta": "0_64",
										"span": {
											"class": "phui-tag-core ",
											"span": {
												"class": "visual-only phui-icon-view phui-font-fa fa-users",
												"data-meta": "0_63",
												"aria-hidden": "true"
											},
											"$t": "Performance-Team"
										}
									},
									{
										"href": "/T166373",
										"class": "phui-tag-view phui-tag-type-object ",
										"data-sigil": "hovercard",
										"data-meta": "0_59",
										"span": {
											"class": "phui-tag-core-closed",
											"span": {
												"class": "phui-tag-core phui-tag-color-object",
												"$t": "T166373: Investigate apparent performance improvement around 2017-05-24"
											}
										}
									}
								]
							},
							{
								"a": {
									"href": "https://grafana.wikimedia.org/dashboard/db/navigation-timing?refresh=5m&orgId=1",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Navigation Timing in Grafana"
								}
							},
							"SpeedIndex can't be measured on real users. Real user metrics are limited by the APIs available in browser, which are very basic compared to what WepPageTest can do. There's no way to tell the visual completeness of the whole page from client-side code.",
							{
								"em": "anything"
							},
							"This fundamental difference means that some performance improvements can improve SpeedIndex, while not changing firstPaint or any other Navigation Timing metric. It's unfortunate in the sense that we know performance has improved, we just can't measure how much it did in the real world for our users. This is exactly what we were seeing here, real user metrics didn't improve during that period. Which doesn't mean that performance didn't really improve for people. As we'll see later, it did. It's also fundamental to understand that Navigation Timing is only a partial view of performance, and that some performance changes simply cannot be measured from real user data at this time.",
							{
								"a": {
									"href": "http://wpt.wmftest.org/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "our public WebPageTest instance"
								},
								"strong": "test history"
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/qf4fjawhex4ssrlivua7/PHID-FILE-q6zq6olrl24jkk7p6ic2/Capture_d_e%CC%81cran_2017-05-30_13.47.38.png",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_55",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/qf4fjawhex4ssrlivua7/PHID-FILE-q6zq6olrl24jkk7p6ic2/Capture_d_e%CC%81cran_2017-05-30_13.47.38.png",
											"height": "265",
											"width": "1002"
										}
									}
								}
							},
							{
								"strong": "show tests from all users"
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/3ql634biebe3rkurc73y/PHID-FILE-a3yg6eucbu7cx23ex3z5/Capture_d_e%CC%81cran_2017-05-30_13.49.07.png",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_56",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/3ql634biebe3rkurc73y/PHID-FILE-a3yg6eucbu7cx23ex3z5/Capture_d_e%CC%81cran_2017-05-30_13.49.07.png",
											"height": "471",
											"width": "1002"
										}
									}
								}
							},
							"We test a number of pages for the desktop and mobile site, using various simulated internet connection speeds, etc. Finding the tests you're interested in in this history view requires manual labour, as you need to manually search for the labels you're interested in, the search box only applying to the URL.",
							"WebPageTest supports a great feature to compare different runs from the history view. We won't get into that here, though, as the difference is visible from the screenshot of the runs alone. After combing through the history view, I found two runs of the same test (the Sweden article on English Wikipedia, browsing the mobile site on Chrome with a simulated 3G connection.) before and after the SpeedIndex drop.",
							{
								"a": {
									"href": "http://wpt.wmftest.org/result/170524_KJ_9Z/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Before"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/httblcplhajjtarkhduq/PHID-FILE-mnp6ibsfr5o3suemcz5q/1_screen_thumb_%284%29.jpg",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_57",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/httblcplhajjtarkhduq/PHID-FILE-mnp6ibsfr5o3suemcz5q/1_screen_thumb_%284%29.jpg",
											"height": "354",
											"width": "250"
										}
									}
								}
							},
							{
								"a": {
									"href": "http://wpt.wmftest.org/result/170524_00_SW/",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "After"
								}
							},
							{
								"div": {
									"class": "phabricator-remarkup-embed-layout-left",
									"a": {
										"href": "https://phab.wmfusercontent.org/file/data/haqnkjqmhwrod4o5fkxo/PHID-FILE-4odgcokiwawj4nfd3i2o/1_screen_thumb_%285%29.jpg",
										"class": "phabricator-remarkup-embed-image-full",
										"data-sigil": "lightboxable",
										"data-meta": "0_58",
										"img": {
											"src": "https://phab.wmfusercontent.org/file/data/haqnkjqmhwrod4o5fkxo/PHID-FILE-4odgcokiwawj4nfd3i2o/1_screen_thumb_%285%29.jpg",
											"height": "354",
											"width": "250"
										}
									}
								}
							},
							"It's obvious that the content above the fold changed. The new version displays mostly text above the fold, where the old version had images. This explains the SpeedIndex improvement: it's faster to load text than an image, which means that users get content they can consume above the fold faster. This is more dramatic on slow connections, which is why this performance improvement showed up on our synthetic testing that simulated a 3G connection.",
							{
								"a": {
									"href": "https://wikitech.wikimedia.org/wiki/Server_Admin_Log",
									"class": "remarkup-link",
									"rel": "noreferrer",
									"$t": "Server Admin Log"
								}
							},
							"And sure enough, we found this log entry around the time of the performance change:",
							{
								"a": [
									{
										"href": "/T150325",
										"class": "phui-tag-view phui-tag-type-object ",
										"data-sigil": "hovercard",
										"data-meta": "0_61",
										"span": {
											"class": "phui-tag-core-closed",
											"span": {
												"class": "phui-tag-core phui-tag-color-object",
												"$t": "T150325: Move first paragraph before infobox on stable"
											}
										}
									},
									{
										"href": "https://en.wikipedia.org/wiki/Help:Infobox",
										"class": "remarkup-link",
										"rel": "noreferrer",
										"$t": "infobox"
									},
									{
										"href": "https://phabricator.wikimedia.org/p/phuedx/",
										"class": "phui-tag-view phui-tag-type-person ",
										"data-sigil": "hovercard",
										"data-meta": "0_62",
										"span": {
											"class": "phui-tag-core phui-tag-color-person",
											"$t": "@phuedx"
										}
									}
								]
							}
						],
						"blockquote": [
							{
								"p": "The Speed Index is the average time at which visible parts of the page are displayed.  It is expressed in milliseconds and dependent on size of the view port."
							},
							{
								"p": {
									"a": {
										"href": "https://phabricator.wikimedia.org/T150325",
										"class": "phui-tag-view phui-tag-type-object ",
										"data-sigil": "hovercard",
										"data-meta": "0_60",
										"span": {
											"class": "phui-tag-core-closed",
											"span": {
												"class": "phui-tag-core phui-tag-color-object",
												"$t": "T150325"
											}
										}
									}
								}
							}
						],
						"h2": [
							{
								"class": "remarkup-header",
								"$t": "Comparing synthetic testing and real user metrics"
							},
							{
								"class": "remarkup-header",
								"$t": "Comparing WebPageTest runs"
							},
							{
								"class": "remarkup-header",
								"$t": "Deliberate or accidental change?"
							}
						]
					}
				}
			}
		]
	}
}